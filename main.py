# -*-coding: utf-8 -*-
from aifc import Error
import logging
from ntpath import join
from os import times
import sqlite3
import random
import time
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.markdown import quote_html
from datetime import datetime, timedelta
from decimal import Decimal
from time import gmtime
from time import strptime
import asyncio


logging.basicConfig(level=logging.INFO)

# bot init
bot = Bot(token='6116567454:AAHRdMnmGbADfMXEpYO70PO5uT4OV8cRvtU')
dp = Dispatcher(bot)


# datebase
connect = sqlite3.connect("LAY.db")
cursor = connect.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS users(
    user_id BIGINT,
    user_name STRING,
    user_tg_name STRING,
    user_status STRING,
    balance INT,
    bank BIGINT,
    ethereum INT,
    rating INT,
    status_block STRING,
    time_register INT,
    pref STRING,
    donate_coins INT,
    game INT,
    bank2 INT,
    depozit INT,
    stats_status STRING
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS bot(
    user_id BIGJNT,
    chat_id INTERGEN,
    last_stavka INTERGEN,
    last_depozit INTERGEN
)
""")


cursor.execute("""CREATE TABLE IF NOT EXISTS mine(
    user_id INT,
    user_name STRING,
    pick STRING,
    iron INT,
    metall INT,
    silver INT,
    bronza INT,
    gold INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS user_case(
    user_id INT,
    case_money INT,
    case_donate INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS farm(
    user_id INT,
    user_name STRING,
    rake STRING,
    linen INT,
    cotton INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS house(
    user_id INT,
    user_name STRING,
    house INT,
    basement INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS cars(
    user_id INT,
    user_name STRING,
    cars INT,
    hp INT,
    benz INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS bot_time(
    user_id INT,
    stavka_games INTERGEN,
    stavka_bank INTERGEN,
    stavka_bonus INT,
    stavka_depozit INTERGEN,
    time_pick INT,
    time_rake INT,
    time_craft INT,
    time_kit INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS time_bank(
    user_id INT,
    stavka INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS ob_time(
    user_id INT,
    stavka INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS time_prefix(
    user_id INT,
    stavka INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS time_sms(
    user_id INT,
    stavka INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS warn(
    user_id INT,
    warn INT 
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS console(
    user_id INT,
    status STRING 
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS channel_pov(
    user_id INT,
    members INT   
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS avatarka(
    user_id INT,
    avatarka STRING   
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS reput(
    user_id INT,
    reput INT   
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo1(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo2(
    user_id INT,
    members INT,
    ob_members INT
)
""")
cursor.execute("""CREATE TABLE IF NOT EXISTS promo3(
    user_id INT,
    members INT,
    ob_members INT
)
""")
cursor.execute("""CREATE TABLE IF NOT EXISTS promo4(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo5(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo6(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo7(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo8(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo9(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo10(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo11(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo12(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo13(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo14(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo15(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo16(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo17(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo18(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo19(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo20(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo21(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo22(
    user_id INT,
    members INT,
    ob_members INT
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS promo23(
    user_id INT,
    members INT,
    ob_members INT
)
""")



@dp.message_handler(commands=['gamevb'])
async def start_cmd(message):
   msg = message
   user_id = msg.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   period = 5

   balance = cursor.execute("SELECT balance from users where user_id = ?",(message.from_user.id,)).fetchone()
   balance = int(balance[0])

   gamevbmenu = InlineKeyboardMarkup(row_width=1)
   gamevb = InlineKeyboardButton(text='–ò–ì–†–ê–¢–¨ üéÆ', callback_data='gamevb')
   gamevbmenu.add(gamevb)

   get = cursor.execute("SELECT stavka_games FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
   last_stavka = f"{INTERGEN(get[0])}"
   stavkatime = time.time() - float(last_stavka)
   if stavkatime > period:
      if balance > 0:
         await bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –≤ GAME-VB ? üßä

‚ÑπÔ∏è | –í —ç—Ç–æ–π –∏–≥—Ä–µ –≤—ã –∏–≥—Ä–∞–µ—Ç–µ —Å—Ä–∞–∑—É –Ω–∞ –≤–µ—Å—å <b>–±–∞–ª–∞–Ω—Å</b>

‚ÜòÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ         
""",reply_markup=gamevbmenu,  parse_mode='html')
      else:
         await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –æ—à–∏–±–∫–∞! –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! ", parse_mode='html')
   else:
      await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 5 —Å–µ–∫—É–Ω–¥", parse_mode='html')         
      

# start command
@dp.message_handler(commands=['start'])
async def start_cmd(message):
    msg = message
    user_id = msg.from_user.id
    user_name = msg.from_user.full_name
    full_name = msg.from_user.full_name
    user_status = "Player"
    user_name = '–ò–≥—Ä–æ–∫'
    chat_id = message.chat.id
    avatarka_start = 'none'
    cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
    if cursor.fetchone() is None:
        cursor.execute("INSERT INTO users VALUES(?, ?, ?, ?, ?, ?);", (user_id, 10000, 0, user_name, user_status, 0))
        cursor.execute("INSERT INTO avatarka VALUES(?, ?);",(user_id, avatarka_start))
        cursor.execute("INSERT INTO cars VALUES(?, ?, ?, ?, ?);",(user_id, user_name, 0, 0, 0))
        cursor.execute("INSERT INTO house VALUES(?, ?, ?, ?);",(user_id, user_name, 0, 0))
        cursor.execute("INSERT INTO bot VALUES(?, ?);", (chat_id, 0))
        connect.commit()
        print(f'–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {full_name}')
    else:
        cursor.execute("INSERT INTO bot VALUES(?, ?);", (chat_id, 0))
        connect.commit()

    reg = InlineKeyboardMarkup(row_width=2)    
    btn6 = InlineKeyboardButton(text='üÜò –î–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Ç', url='https://t.me/leonqamebot?startgroup')       
    reg.add(btn6)

    reg = InlineKeyboardMarkup(row_width=1)
    register_help = InlineKeyboardButton(text='üÜò –ü–æ–º–æ—â—å', callback_data='register_help')
    reg.add(register_help)
    
    name = message.from_user.get_mention(as_html=True)
    await bot.send_message(message.chat.id, f'''
üôã | –ü—Ä–∏–≤–µ—Ç {name}, —è –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç LayüçÄ –¢–µ–±–µ –≤—ã–¥–∞–Ω–æ <code>10.000‚Ç¨</code>\nüÜò | –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å –º–æ–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É –ü–æ–º–æ—â—å, –∏–ª–∏ –Ω–∞–∂–º–∏–Ω–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–∏\n‚ûï | –ï—Å–ª–∏ —è —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–ª—é—Å—å –¥–æ–±–∞–≤–∏—à—å –º–µ–Ω—è –≤ —Å–≤–æ–π —á–∞—Ç–∏–∫?)
    ''', reply_markup=reg, parse_mode='html')         
@dp.message_handler(commands=['–º—É—Ç', 'mute'], commands_prefix='!?./', is_chat_admin=True)
async def mute(message):
   name1 = message.from_user.get_mention(as_html=True)
   if not message.reply_to_message:
      await message.reply("‚Ñπ | –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
      return
   try:
      muteint = int(message.text.split()[1])
      mutetype = message.text.split()[2]
      comment = " ".join(message.text.split()[3:])
   except IndexError:
      await message.reply('‚Ñπ | –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!\n–ü—Ä–∏–º–µ—Ä:\n<code>/–º—É—Ç 1 —á –ø—Ä–∏—á–∏–Ω–∞</code>')
      return
   if mutetype == "—á" or mutetype == "—á–∞—Å–æ–≤" or mutetype == "—á–∞—Å":
      dt = datetime.now() + timedelta(hours=muteint)
      timestamp = dt.timestamp()
      await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = timestamp)
      await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüõë | –ó–∞–º—É—Ç–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | –°—Ä–æ–∫: {muteint} {mutetype}\nüìÉ | –ü—Ä–∏—á–∏–Ω–∞: {comment}',  parse_mode='html')
   if mutetype == "–º" or mutetype == "–º–∏–Ω—É—Ç" or mutetype == "–º–∏–Ω—É—Ç—ã":
      dt = datetime.now() + timedelta(minutes=muteint)
      timestamp = dt.timestamp()
      await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = timestamp)
      await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüõë | –ó–∞–º—É—Ç–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | –°—Ä–æ–∫: {muteint} {mutetype}\nüìÉ | –ü—Ä–∏—á–∏–Ω–∞: {comment}',  parse_mode='html')
   if mutetype == "–¥" or mutetype == "–¥–Ω–µ–π" or mutetype == "–¥–µ–Ω—å":
      dt = datetime.now() + timedelta(days=muteint)
      timestamp = dt.timestamp()
      await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = timestamp)
      await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\n | üõë–ó–∞–º—É—Ç–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | –°—Ä–æ–∫: {muteint} {mutetype}\nüìÉ | –ü—Ä–∏—á–∏–Ω–∞: {comment}',  parse_mode='html')

@dp.message_handler(commands=['—Ä–∞–∑–º—É—Ç', 'unmute'], commands_prefix='!?./', is_chat_admin=True)
async def unmute(message):
   name1 = message.from_user.get_mention(as_html=True)
   if not message.reply_to_message:
      await message.reply("‚Ñπ | –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
      return
   await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(True, True, True, True))
   await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüîä | –†–∞–∑–º—É—Ç–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>',  parse_mode='html')

@dp.message_handler(commands=['ban', '–±–∞–Ω', '–∫–∏–∫', 'kick'], commands_prefix='!?./', is_chat_admin=True)
async def ban(message):
   name1 = message.from_user.get_mention(as_html=True)
   if not message.reply_to_message:
      await message.reply("‚Ñπ | –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
      return
   comment = " ".join(message.text.split()[1:])
   await bot.kick_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False))
   await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüõë | –ó–∞–±–∞–Ω–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | –°—Ä–æ–∫: –Ω–∞–≤—Å–µ–≥–¥–∞\nüìÉ | –ü—Ä–∏—á–∏–Ω–∞: {comment}',  parse_mode='html')

@dp.message_handler(commands=['—Ä–∞–∑–±–∞–Ω', 'unban'], commands_prefix='!?./', is_chat_admin=True)
async def unban(message):
   name1 = message.from_user.get_mention(as_html=True)
   if not message.reply_to_message:
      await message.reply("‚Ñπ | –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
      return
   await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(True, True, True, True))
   await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüì≤ | –†–∞–∑–±–∞–Ω–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>',  parse_mode='html')
@dp.message_handler(commands=['report'])
async def report(message):
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_id = message.from_user.id

    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    text = message.text[7:]
    
    if text == '':
       await bot.send_message(message.chat.id, f"üìñ | <a href='tg://user?id={user_id}'>{user_name}</a> –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏ —Å–ª–∏—à–∫–æ–º –∫—Ä–∞—Ç–∫–æ –≤–∞—à —Ä–µ–ø–æ—Ä—Ç", parse_mode='html')
       return
    rows = cursor.execute('SELECT user_id FROM users where user_status = "Helper_Admin"').fetchall()
    for row in rows:
       await bot.send_message(row[0], f"<b>üÜò–í–ê–ú –ü–†–ò–®–Å–õ –†–ï–ü–û–†–¢üÜò</b>\nüë® | –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí¨ |–°–æ–æ–±—â–µ–Ω–∏–µ: <i>{text}</i>", parse_mode='html')

    await bot.send_message(1887634547,f"""
<b>üÜò–í–ê–ú –ü–†–ò–®–Å–õ –†–ï–ü–û–†–¢üÜò</b>
üë® | –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: <a href='tg://user?id={user_id}'>{user_name}</a>  
üí¨ |–°–æ–æ–±—â–µ–Ω–∏–µ: <i>{text}</i>
    """, parse_mode='html')  
    await bot.send_message(message.chat.id, f"‚úÖ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤–∞—à —Ä–µ–ø–æ—Ä—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏", parse_mode='html')  
@dp.message_handler(commands=['m'])
async def start_cmd(message):
   try:
      text = ' '.join(message.text.split()[2:])

      msg = message
      user_id = msg.from_user.id
      user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
      user_name = str(user_name[0])

      reply_user_id = int(message.text.split()[1])
      reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
      reply_user_name = str(reply_user_name[0])

      period = 5
      get = cursor.execute("SELECT stavka FROM time_sms WHERE user_id = ?", (message.from_user.id,)).fetchone()
      last_stavka = f"{int(get[0])}"
      stavkatime = time.time() - float(last_stavka)

      if len(text) > 50:
         await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ —á–µ–º 50 —Å–∏–º–≤–æ–ª–æ–≤ ", parse_mode='html')
         return
      if stavkatime > period:
         await bot.send_message(user_id, f"üí¨ | [–Ø ‚û°Ô∏è <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>] {text}", parse_mode='html')
         await bot.send_message(reply_user_id, f"üí¨ | [<a href='tg://user?id={user_id}'>{user_name}</a> ‚û°Ô∏è –Ø] {text}", parse_mode='html')
         cursor.execute(f'UPDATE time_sms SET stavka = {time.time()} WHERE user_id = {user_id}')
         connect.commit()
         return
      else:
         await bot.send_message(user_id, f"üÜò | –ò–≥—Ä–æ–∫, —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–∏—Å–∞—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 5 —Å–µ–∫—É–Ω–¥", parse_mode='html')
         return
   except:
      await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –æ—à–∏–±–∫–∞! –õ–∏–±–æ –≤—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ID, –∏–ª–∏ –¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ –±–æ—Ç–∞", parse_mode='html')
      return    
@dp.message_handler(commands=['help_admins'])
async def help_admins(message):
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_id = message.from_user.id

    await bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–∞—Ç–∞ ‚õîÔ∏è

1Ô∏è‚É£ /channel_mute [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] [–º\–¥\—á] [–ø—Ä–∏—á–∏–Ω–∞] - –í—ã–¥–∞—á–∞ –∑–∞—Ç—ã—á–∫–∏ –∏–≥—Ä–æ–∫—É 
2Ô∏è‚É£ /channel_ban [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] [–º\–¥\—á] [–ø—Ä–∏—á–∏–Ω–∞] - –í—ã–¥–∞—á–∞ –±–∞–Ω–∞ –∏–≥—Ä–æ–∫—É
3Ô∏è‚É£ /channel_unmute - —Å–Ω—è—Ç–∏–µ –∑–∞—Ç—ã—á–∫–∏ –∏–≥—Ä–æ–∫—É 
4Ô∏è‚É£ /channel_unban - —Å–Ω—è—Ç–∏–µ –±–∞–Ω–∞ –∏–≥—Ä–æ–∫—É 

‚ÑπÔ∏è–ö–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è     
    """, parse_mode='html')

@dp.message_handler(commands=['reset'])
async def start_cmd(message):
    msg = message
    user_id = msg.from_user.id
    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    
    

    if user_status == 'Owner':
       await bot.send_message(message.chat.id, f"‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –ú–∞—Å–æ–≤–æ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® | –ò–≥—Ä–æ–∫—É: –í—Å–µ–º –∏–≥—Ä–æ–∫–∞–º", parse_mode='html')
       cursor.execute(f'UPDATE users SET balance = {10000}')
       cursor.execute(f'UPDATE users SET user_name = "–ò–≥—Ä–æ–∫"')
       cursor.execute(f'UPDATE users SET bank = {1000}')
       cursor.execute(f'UPDATE users SET depozit = {0}')
       cursor.execute(f'UPDATE users SET rating = {0}')
       cursor.execute(f'UPDATE users SET ethereum = {100}')
       cursor.execute(f'UPDATE mine SET iron = {0}')
       cursor.execute(f'UPDATE mine SET metall = {0}')
       cursor.execute(f'UPDATE mine SET silver = {0}')
       cursor.execute(f'UPDATE mine SET bronza = {0}')
       cursor.execute(f'UPDATE mine SET gold = {0}')
       cursor.execute(f'UPDATE farm SET linen = {0}')
       cursor.execute(f'UPDATE farm SET cotton = {0}')
       cursor.execute(f'UPDATE house SET house = {0}')
       cursor.execute(f'UPDATE house SET basement = {0}')
       cursor.execute(f'UPDATE cars SET cars = {0}')
       cursor.execute(f'UPDATE cars SET hp = {0}')
       cursor.execute(f'UPDATE cars SET benz = {0}')
       cursor.execute(f'UPDATE bot_time SET stavka_games = {0} ')
       cursor.execute(f'UPDATE bot_time SET stavka_bank = {0} ')
       cursor.execute(f'UPDATE bot_time SET stavka_bonus = {0} ')
       cursor.execute(f'UPDATE bot_time SET stavka_depozit = {0} ')
       cursor.execute(f'UPDATE bot_time SET time_pick = {0} ')
       cursor.execute(f'UPDATE bot_time SET time_rake = {0} ')
       cursor.execute(f'UPDATE bot_time SET time_craft = {0} ')
       cursor.execute(f'UPDATE bot_time SET time_kit = {0} ')

       connect.commit()
       full_name = msg.from_user.full_name
       print(f'{full_name} —Å–¥–µ–ª–∞–ª –º–∞—Å–æ–≤–æ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ')
       return
    else:
       await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"OWNER\"", parse_mode='html')
             
@dp.callback_query_handler(text='ava_admin')
async def craft_resurs3(callback: types.CallbackQuery):
   user_id = callback.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   user_status = cursor.execute("SELECT user_status from users where user_id = ?",(callback.from_user.id,)).fetchone()
   user_status = str(user_status[0])

   if user_status in ['Admin', 'Helper_Admin', 'Owner']:
      await callback.message.answer( f"üñº | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∞–≤–∞—Ç–∞—Ä–∫—É \"–ê–î–ú–ò–ù\"", parse_mode='html')
      cursor.execute(f'UPDATE avatarka SET avatarka = "admin" WHERE user_id = {user_id}')
      connect.commit()
      return
   else:
      await callback.message.answer( f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞ üëÆ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚ö†Ô∏è", parse_mode='html')

@dp.callback_query_handler(text='ava_girl')
async def craft_resurs3(callback: types.CallbackQuery):
   user_id = callback.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   await callback.message.answer( f"üñº | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∞–≤–∞—Ç–∞—Ä–∫—É \"–î–ï–í–£–®–ö–ê\"", parse_mode='html')
   cursor.execute(f'UPDATE avatarka SET avatarka = "girl" WHERE user_id = {user_id}')
   connect.commit()

@dp.callback_query_handler(text='ava_dyp')
async def craft_resurs3(callback: types.CallbackQuery):
   user_id = callback.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   await callback.message.answer( f"üñº | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∞–≤–∞—Ç–∞—Ä–∫—É \"–î–Æ–ü–ü–ï–†\"", parse_mode='html')
   cursor.execute(f'UPDATE avatarka SET avatarka = "dyp" WHERE user_id = {user_id}')
   connect.commit()

@dp.callback_query_handler(text='ava_apper')
async def craft_resurs3(callback: types.CallbackQuery):
   user_id = callback.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   await callback.message.answer( f"üñº | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∞–≤–∞—Ç–∞—Ä–∫—É \"–ê–ü–ü–ï–†\"", parse_mode='html')
   cursor.execute(f'UPDATE avatarka SET avatarka = "apper" WHERE user_id = {user_id}')
   connect.commit()

@dp.callback_query_handler(text='ava_cheat')
async def craft_resurs3(callback: types.CallbackQuery):
   user_id = callback.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   await callback.message.answer( f"üñº | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∞–≤–∞—Ç–∞—Ä–∫—É \"–ß–ò–¢–ï–†\"", parse_mode='html')
   cursor.execute(f'UPDATE avatarka SET avatarka = "cheat" WHERE user_id = {user_id}')
   connect.commit()

@dp.callback_query_handler(text='ava_strach')
async def craft_resurs3(callback: types.CallbackQuery):
   user_id = callback.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   await callback.message.answer( f"üñº | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∞–≤–∞—Ç–∞—Ä–∫—É \"–°–¢–†–ê–ñ\"", parse_mode='html')
   cursor.execute(f'UPDATE avatarka SET avatarka = "strach" WHERE user_id = {user_id}')
   connect.commit()
         
@dp.message_handler(commands=['post'])
async def posting(message):
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_id = message.from_user.id
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    text = message.text[5:]
    
    if user_status == 'Owner':
       rows = cursor.execute('SELECT user_id FROM users').fetchall()
       for row in rows:
          await bot.send_message(row[0], text, parse_mode='html')
    else:
       await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"OWNER\"", parse_mode='html')      
@dp.message_handler(commands=['ban_id'])
async def start_cmd(message):
    msg = message
    user_id = msg.from_user.id
    reply_user_id = int(message.text.split()[1])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
    reply_user_name = str(reply_user_name[0])

    


    if user_status == 'Owner':
       await bot.send_message(reply_user_id, f"üìõ | <a href='tg://user?id={user_id}'>{reply_user_name}</a>, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ ID", parse_mode='html')

       await bot.send_message(message.chat.id, f"‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –ë–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "on"  WHERE user_id = {reply_user_id}')
       full_name = msg.from_user.full_name
       
       print(f'{full_name} –≤—ã–¥–∞–ª –±–∞–Ω –∏–≥—Ä–æ–∫—É: {reply_user_name}')
       connect.commit()
       return
    if user_status == 'Helper_Admin':
       await bot.send_message(reply_user_id, f"üìõ | <a href='tg://user?id={user_id}'>{reply_user_name}</a>, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ ID", parse_mode='html')
       await bot.send_message(1887634547, f"‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –ë–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')

       await bot.send_message(message.chat.id, f"‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –ë–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "on"  WHERE user_id = {reply_user_id}')
       full_name = msg.from_user.full_name
       
       print(f'{full_name} –≤—ã–¥–∞–ª –±–∞–Ω –∏–≥—Ä–æ–∫—É: {reply_user_name}')
       connect.commit()
       return
    else:
       await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER ADMIN\"", parse_mode='html')             ###########################################–ë–ê–õ–ê–ù–°###########################################
@dp.message_handler()
async def prof_user(message: types.Message):
    if message.forward_date != None:
        rx = ['üòå','ü•±','üôÑ','üòé','üòè']
        rdrx = random.choice(rx)
        await bot.send_message(message.chat.id,f"")
        return
    if message.text.lower() in ["–±–∞–ª–∞–Ω—Å", "–ë–∞–ª–∞–Ω—Å", "–ë", "–±"]:
       msg = message
       user_id = msg.from_user.id
       
       chat_id = message.chat.id

       avatarka = cursor.execute("SELECT avatarka from avatarka where user_id = ?",(message.from_user.id,)).fetchone()
       avatarka = avatarka[0]

       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       balance = cursor.execute("SELECT balance from users where user_id = ?",(message.from_user.id,)).fetchone()
       balance = int(balance[0])
       balance2 = '{:,}'.format(balance)
       bank = cursor.execute("SELECT bank from users where user_id = ?",(message.from_user.id,)).fetchone()
       bank = int(bank[0])
       bank2 = '{:,}'.format(bank)

       c = 999999999999999999999999999999999999999999999999999999999999999999
       if balance >= 999999999999999999999999999999999999999999999999999999999999999999:
          balance = 999999999999999999999999999999999999999999999999999999999999999999
          cursor.execute(f'UPDATE users SET balance = {999999999999999999999999999999999999999999999999999999999999999999}  WHERE user_id = ?', (user_id,))
          connect.commit()
          balance2 = '{:,}'.format(balance) 
       else:
        pass
       if bank >= 999999999999999999999999999999999999999999999999999999999999999999:
          bank = 999999999999999999999999999999999999999999999999999999999999999999
          cursor.execute(f'UPDATE users SET bank = {999999999999999999999999999999999999999999999999999999999999999999}  WHERE user_id = ?', (user_id,))
          connect.commit()
          bank2 = '{:,}'.format(bank)
       else:
        pass

       if avatarka == 'apper':
          ava = open('apper.jpg', 'rb')
          await bot.send_photo(message.chat.id, ava, f"ü§µ | –ù–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí∂ | –ë–∞–ª–∞–Ω—Å: {balance2}‚Ç¨\n‚úèÔ∏è | –ü—Ä–µ—Ñ–∏–∫—Å: {pref}\nüè¶ | –í –ë–∞–Ω–∫–µ: {bank2}‚Ç¨\nüíπ | –ò–µ–Ω—ã: [–†–ê–ó–†–ê–ë–û–¢–ö–ê]¬•", parse_mode='html')
          return
       
       if avatarka == 'creator':
          ava = open('IMG_20220611_032148_654.jpg', 'rb')
          await bot.send_photo(message.chat.id, ava, f"ü§µ | –ù–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí∂ | –ë–∞–ª–∞–Ω—Å: {balance2}‚Ç¨\n‚úèÔ∏è | –ü—Ä–µ—Ñ–∏–∫—Å: {pref}\nüè¶ | –í –ë–∞–Ω–∫–µ: {bank2}‚Ç¨\nüíπ | –ò–µ–Ω—ã: [–†–ê–ó–†–ê–ë–û–¢–ö–ê]¬•", parse_mode='html')
          return
          
       if avatarka == 'admin':
          ava = open('–∞–¥–º–∏–Ω.jpg', 'rb')
          await bot.send_photo(message.chat.id, ava, f"ü§µ | –ù–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí∂ | –ë–∞–ª–∞–Ω—Å: {balance2}‚Ç¨\n‚úèÔ∏è | –ü—Ä–µ—Ñ–∏–∫—Å: {pref}\nüè¶ | –í –ë–∞–Ω–∫–µ: {bank2}‚Ç¨\nüíπ | –ò–µ–Ω—ã: [–†–ê–ó–†–ê–ë–û–¢–ö–ê]¬•", parse_mode='html')
          return
          
       if avatarka == 'girl':
          ava = open('girl.jpg', 'rb')
          await bot.send_photo(message.chat.id, ava, f"ü§µ | –ù–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí∂ | –ë–∞–ª–∞–Ω—Å: {balance2}‚Ç¨\n‚úèÔ∏è | –ü—Ä–µ—Ñ–∏–∫—Å: {pref}\nüè¶ | –í –ë–∞–Ω–∫–µ: {bank2}‚Ç¨\nüíπ | –ò–µ–Ω—ã: [–†–ê–ó–†–ê–ë–û–¢–ö–ê]¬•", parse_mode='html')
          return
       
       if avatarka == 'cheat':
          ava = open('cheat.jpg', 'rb')
          await bot.send_photo(message.chat.id, ava, f"ü§µ | –ù–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí∂ | –ë–∞–ª–∞–Ω—Å: {balance2}‚Ç¨\n‚úèÔ∏è | –ü—Ä–µ—Ñ–∏–∫—Å: {pref}\nüè¶ | –í –ë–∞–Ω–∫–µ: {bank2}‚Ç¨\nüíπ | –ò–µ–Ω—ã: [–†–ê–ó–†–ê–ë–û–¢–ö–ê]¬•", parse_mode='html')
          return
       
       if avatarka == 'dyp':
          ava = open('–¥—é–ø.jpg', 'rb')
          await bot.send_photo(message.chat.id, ava, f"ü§µ | –ù–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí∂ | –ë–∞–ª–∞–Ω—Å: {balance}‚Ç¨\n‚úèÔ∏è | –ü—Ä–µ—Ñ–∏–∫—Å: {pref}\nüè¶ | –í –ë–∞–Ω–∫–µ: {bank2}‚Ç¨\nüíπ | –ò–µ–Ω—ã: [–†–ê–ó–†–ê–ë–û–¢–ö–ê]¬•", parse_mode='html')
          return
       
       if avatarka == 'strach':
          ava = open('—Å—Ç—Ä–∞–∂.jpg', 'rb')
          await bot.send_photo(message.chat.id, ava, f"ü§µ | –ù–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí∂ | –ë–∞–ª–∞–Ω—Å: {balance2}‚Ç¨\n‚úèÔ∏è | –ü—Ä–µ—Ñ–∏–∫—Å: {pref}\nüè¶ | –í –ë–∞–Ω–∫–µ: {bank2}‚Ç¨\nüíπ | –ò–µ–Ω—ã: [–†–ê–ó–†–ê–ë–û–¢–ö–ê]¬•", parse_mode='html')
          return


       await bot.send_message(message.chat.id, f"ü§µ | –ù–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí∂ | –ë–∞–ª–∞–Ω—Å: {balance2}‚Ç¨\n‚úèÔ∏è | –ü—Ä–µ—Ñ–∏–∫—Å: [–†–∞–∑—Ä–∞–±–æ—Ç–∫–µ]\nüè¶ | –í –ë–∞–Ω–∫–µ: {bank2}‚Ç¨\nüíπ | –ò–µ–Ω—ã: [–†–ê–ó–†–ê–ë–û–¢–ö–ê]¬•", parse_mode='html')
       
    if message.text.lower() in ["–ú–æ–π –±–∞–Ω–∫", "–±–∞–Ω–∫", "–ë–∞–Ω–∫", "–º–æ–π –±–∞–Ω–∫"]:
       msg = message
       user_id = msg.from_user.id
       
       chat_id = message.chat.id

       avatarka = cursor.execute("SELECT avatarka from avatarka where user_id = ?",(message.from_user.id,)).fetchone()
       avatarka = avatarka[0]

       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       balance = cursor.execute("SELECT balance from users where user_id = ?",(message.from_user.id,)).fetchone()
       balance = int(balance[0])
       balance2 = '{:,}'.format(balance)
       bank = cursor.execute("SELECT bank from users where user_id = ?",(message.from_user.id,)).fetchone()
       bank = int(bank[0])
       bank2 = '{:,}'.format(bank)

       c = 999999999999999999999999999999999999999999999999999999999999999999
       if balance >= 999999999999999999999999999999999999999999999999999999999999999999:
          balance = 999999999999999999999999999999999999999999999999999999999999999999
          cursor.execute(f'UPDATE users SET balance = {999999999999999999999999999999999999999999999999999999999999999999}  WHERE user_id = ?', (user_id,))
          connect.commit()
          balance2 = '{:,}'.format(balance) 
       else:
        pass
       if bank >= 999999999999999999999999999999999999999999999999999999999999999999:
          bank = 999999999999999999999999999999999999999999999999999999999999999999
          cursor.execute(f'UPDATE users SET bank = {999999999999999999999999999999999999999999999999999999999999999999}  WHERE user_id = ?', (user_id,))
          connect.commit()
          bank2 = '{:,}'.format(bank)
       else:
        pass

       await bot.send_message(message.chat.id, f"üëã | <a href='tg://user?id={user_id}'>{user_name}</a> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∞–Ω–∫ <b>¬´üí∏Lay¬ª</b>\n‚ùóÔ∏è–í–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç: {bank2}‚Ç¨", parse_mode='html')
       
    if message.text.lower() in ["–ø—Ä–æ—Ñ–∏–ª—å", "–ü—Ä–æ—Ñ–∏–ª—å"]:
       msg = message
       chat_id = message.chat.id
       name1 = message.from_user.get_mention(as_html=True)
       
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])
       
       user_id = msg.from_user.id
       balance = cursor.execute("SELECT balance from users where user_id = ?",(message.from_user.id,)).fetchone()
       bank = cursor.execute("SELECT bank from users where user_id = ?",(message.from_user.id,)).fetchone()
       rating = cursor.execute("SELECT rating from users where user_id = ?",(message.from_user.id,)).fetchone()
       balance = int(balance[0])
       bank = int(bank[0])
       rating = int(rating[0])
       
       cars = cursor.execute("SELECT cars from cars where user_id = ?",(message.from_user.id,)).fetchone()
       cars = int(cars[0])

       house = cursor.execute("SELECT house from house where user_id = ?",(message.from_user.id,)).fetchone()
       house = int(house[0])

       d5 = 0

       if house == 1:
          house2 = '\n    üè†–î–æ–º: –ö–æ—Ä–æ–±–∫–∞\n'
          d5 += 1
       if house == 2:
          house2 = '\n    üè†–î–æ–º: –°–∞—Ä–∞–π\n'
          d5 += 1
       if house == 3:
          house2 = '\n    üè†–î–æ–º: –ú–∞–ª–µ–Ω—å–∫–∏–π –¥–æ–º–∏–∫\n'
          d5 += 1
       if house == 4:
          house2 = '\n    üè†–î–æ–º: –ö–≤–∞—Ä—Ç–∏—Ä–∞\n'
          d5 += 1
       if house == 5:
          house2 = '\n    üè†–î–æ–º: –û–≥—Ä–æ–º–Ω—ã–π –¥–æ–º\n'
          d5 += 1
       if house == 6:
          house2 = '\n    üè†–î–æ–º: –ö–æ—Ç—Ç–µ–¥–∂\n'
          d5 += 1
       if house == 7:
          house2 = '\n    üè†–î–æ–º: –í–∏–ª–ª–∞\n'
          d5 += 1
       if house == 8:
          house2 = '\n    üè†–î–æ–º: –ó–∞–≥–æ—Ä–æ–¥–Ω—ã–π –¥–æ–º\n'
          d5 += 1
       else:
          house2 = ''
       if cars == 1:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –°–∞–º–æ–∫–∞—Ç\n'
          d5 += 1
       if cars == 2:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –í–µ–ª–æ—Å–∏–ø–µ–¥\n'
          d5 += 1
       if cars == 3:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä\n'
          d5 += 1
       if cars == 4:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –°–µ–≥–≤–µ–π\n'
          d5 += 1
       if cars == 5:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –ú–æ–ø–µ–¥\n'
          d5 += 1
       if cars == 6:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –ú–æ—Ç–æ—Ü–∏–∫–ª\n'
          d5 += 1
       if cars == 7:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –í–ê–ó 2109\n'
          d5 += 1
       if cars == 8:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª\n'
          d5 += 1
       if cars == 9:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –ë–∞–≥–≥–∏\n'
          d5 += 1
       if cars == 10:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –í–µ–∑–¥–µ—Ö–æ–¥\n'
          d5 += 1
       if cars == 11:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: –õ–∞–¥–∞ Xray\n'
          d5 += 1
       if cars == 12:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: Audi Q7\n'
          d5 += 1
       if cars == 13:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: BMW X6\n'
          d5 += 1
       if cars == 14:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: Toyota FT-HS\n'
          d5 += 1
       if cars == 15:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: BMW Z4 M\n'
          d5 += 1
       if cars == 16:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: Subaru WRX STI\n'
          d5 += 1
       if cars == 17:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: Lamborghini Veneno\n'
          d5 += 1
       if cars == 18:
          cars2 = '    üöò–ú–∞—à–∏–Ω–∞: Tesla Roadster\n'
          d5 += 1
       else:
          cars2 = ''

       if d5 == 0:
          d6 = '\n      –£ –≤–∞—Å –Ω–µ—Ç—É –∏–º—É—â–µ—Å—Ç–≤–∞ üôÅ'
       else:
          d6 = 'üïã | –ò–º—É—â–µ—Å—Ç–≤–æ:'
       
       c = 999999999999999999999999999
       if int(balance) in range(0, 1000):
          balance3 = cursor.execute("SELECT balance from users where user_id = ?",(message.from_user.id,)).fetchone()
          balance3 = int(balance3[0])
       if int(balance) in range(1000, 999999):
          balance1 = balance / 1000
          balance2 = round(balance1)
          balance3 = f'{balance2} —Ç—ã—Å'
       if int(balance) in range(1000000, 999999999):
          balance1 = balance / 1000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –º–ª–Ω'
       if int(balance) in range(1000000000, 999999999999):
          balance1 = balance / 1000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –º–ª—Ä–¥'
       if int(balance) in range(1000000000000, 999999999999999):
          balance1 = balance / 1000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} —Ç—Ä–ª–Ω'
       if int(balance) in range(1000000000000000, 999999999999999999):
          balance1 = balance / 1000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –∫–≤–¥—Ä'
       if int(balance) in range(1000000000000000000, 999999999999999999999):
          balance1 = balance / 1000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –∫–≤–Ω—Ç'
       if int(balance) in range(1000000000000000000000, 999999999999999999999999):
          balance1 = balance / 1000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} —Å–∫—Å—Ç'
       if int(balance) in range(1000000000000000000000000, 999999999999999999999999999):
          balance1 = balance / 1000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} —Ç—Ä–∏–∫—Å'
       if int(balance) in range(1000000000000000000000000000,999999999999999999999999999999):
          balance1 = balance / 1000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} —Ç–≤–∏–Ω–∫—Å'
       if int(balance) in range(1000000000000000000000000000000, 999999999999999999999999999999999):
          balance1 = balance / 1000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} —Å–µ–ø—Ç'
       if int(balance) in range(1000000000000000000000000000000000, 999999999999999999999999999999999999):
          balance1 = balance / 1000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –æ–∫—Ç–ª'
       if int(balance) in range(1000000000000000000000000000000000000, 999999999999999999999999999999999999999):
          balance1 = balance / 1000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –Ω–æ–Ω–ª'
       if int(balance) in range(1000000000000000000000000000000000000000, 999999999999999999999999999999999999999999):
          balance1 = balance / 1000000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –¥–µ–∫–∞–ª'
       if int(balance) in range(1000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999):
          balance1 = balance / 1000000000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} —ç–Ω–¥–∫'
       if int(balance) in range(1000000000000000000000000000000000000000000000,999999999999999999999999999999999999999999999999):
          balance1 = balance / 1000000000000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –¥–æ–∫—Ç–ª'
       if int(balance) in range(1000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999) :
          balance1 = balance / 1000000000000000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –≥—É–≥–ª'
       if int(balance) in range(1000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999) :
          balance1 = balance / 1000000000000000000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –∫–∏–Ω–¥'
       if int(balance) in range(1000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999) :
          balance1 = balance / 1000000000000000000000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} —Ç—Ä–∏–ø—Ç'
       if int(balance) in range(1000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999) :
          balance1 = balance / 1000000000000000000000000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} —Å—Ä–∏—Å—Ç'
       if int(balance) in range(1000000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999999):
          balance1 = balance / 1000000000000000000000000000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –º–∞–Ω–∏—Ç'
       if int(balance) >= 1000000000000000000000000000000000000000000000000000000000000000:
          balance1 = balance / 1000000000000000000000000000000000000000000000000000000000000000
          balance2 = round(balance1)
          balance3 = f'{balance2} –≥–≤–∏–Ω—Ç'
       if bank >= 999999999999999999999999999:
          bank = 999999999999999999999999999
          cursor.execute(f'UPDATE users SET bank = {999999999999999999999999999}  WHERE user_id = ?', (user_id,))
          connect.commit()   
       else:
        pass
       if int(bank) in range(0, 1000):
          bank3 = cursor.execute("SELECT bank from users where user_id = ?",(message.from_user.id,)).fetchone()
          bank3 = int(bank3[0])
       if int(bank) in range(1000, 999999):
          bank1 = bank / 1000
          bank2 = round(bank1)
          bank3 = f'{bank2} —Ç—ã—Å'
       if int(bank) in range(1000000, 999999999):
          bank1 = bank / 1000000
          bank2 = round(bank1)
          bank3 = f'{bank2} –º–ª–Ω'
       if int(bank) in range(1000000000, 999999999999):
          bank1 = bank / 1000000000
          bank2 = round(bank1)
          bank3 = f'{bank2} –º–ª—Ä–¥'
       if int(bank) in range(1000000000000, 999999999999999):
          bank1 = bank / 1000000000000
          bank2 = round(bank1)
          bank3 = f'{bank2} —Ç—Ä–ª–Ω'
       if int(bank) in range(1000000000000000, 999999999999999999):
          bank1 = bank / 1000000000000000
          bank2 = round(bank1)
          bank3 = f'{bank2} –∫–≤–¥—Ä'
       if int(bank) in range(1000000000000000000, 999999999999999999999):
          bank1 = bank / 1000000000000000000
          bank2 = round(bank1)
          bank3 = f'{bank2} –∫–≤–Ω—Ç'
       if int(bank) in range(1000000000000000000000, 999999999999999999999999):
          bank1 = bank / 1000000000000000000000
          bank2 = round(bank1)
          bank3 = f'{bank2} —Å–∫—Å—Ç'
       if int(bank) in range(1000000000000000000000000, 999999999999999999999999999):
          bank1 = bank / 1000000000000000000000000
          bank2 = round(bank1)
          bank3 = f'{bank2} —Å–µ–ø—Ç'
       if rating >= 999999999999999999999999:
          rating = 999999999999999999999999
          cursor.execute(f'UPDATE users SET rating = {999999999999999999999999}  WHERE user_id = ?', (user_id,))
          connect.commit()
       else:
        pass
       if int(rating) in range(0, 1000):
          rating3 = cursor.execute("SELECT rating from users where user_id = ?",(message.from_user.id,)).fetchone()
          rating3 = int(rating3[0])
       if int(rating) in range(1000, 999999):
          rating1 = rating / 1000
          rating2 = round(rating1)
          rating3 = f'{rating2} —Ç—ã—Å'
       if int(rating) in range(1000000, 999999999):
          rating1 = rating / 1000000
          rating2 = round(rating1)
          rating3 = f'{rating2} –º–ª–Ω'
       if int(rating) in range(1000000000, 999999999999):
          rating1 = rating / 1000000000
          rating2 = round(rating1) 
          rating3 = f'{rating2} –º–ª—Ä–¥'
       if int(rating) in range(1000000000000, 999999999999999):
          rating1 = rating / 1000000000000
          rating2 = round(rating1)
          rating3 = f'{rating2} —Ç—Ä–ª–Ω'
       if int(rating) in range(1000000000000000, 999999999999999999):
          rating1 = rating / 1000000000000000
          rating2 = round(rating1)
          rating3 = f'{rating2} –∫–≤–¥—Ä'
       if int(rating) in range(1000000000000000000, 999999999999999999999):
          rating1 = rating / 1000000000000000000
          rating2 = round(rating1)
          rating3 = f'{rating2} –∫–≤–Ω—Ç'
       if int(rating) in range(1000000000000000000000, 999999999999999999999999):
          rating1 = rating / 1000000000000000000000
          rating2 = round(rating1)
          rating3 = f'{rating2} —Å–∫—Å—Ç'
       if int(rating) in range(1000000000000000000000000000, 999999999999999999999999999):
          rating1 = rating / 1000000000000000000000000 
          rating2 = round(rating1)          
          rating3 = f'{rating2} —Å–µ–ø—Ç'          
          
       await bot.send_message(message.chat.id, f"{name1} –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å\nüë§ | –ù–∏–∫: {name1}\n üîé |  ID {user_id}\nüëë | –†–µ–π—Ç–∏–Ω–≥: {rating3}\nüí∏ | –î–µ–Ω—å–≥–∏: {balance3}‚Ç¨\nüè¶ | –í –±–∞–Ω–∫–µ: {bank3}‚Ç¨\nüíπ | –ò–µ–Ω—ã: <b>–í –†–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b>¬•",  parse_mode='html')   
       
###################################### –î–û–ú–ê############# ####################################
     
    if message.text.lower() == '–º–æ–π –¥–æ–º':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       house = cursor.execute("SELECT house from house where user_id = ?", (message.from_user.id,)).fetchone()
       house = int(house[0])

       if house == 1:
          house2 = '–ö–æ—Ä–æ–±–∫–∞'
       
       if house == 2:
          house2 = '–°–∞—Ä–∞–π'

       if house == 3:
          house2 = '–ú–∞–ª–µ–Ω—å–∫–∏–π –¥–æ–º–∏–∫'

       if house == 4:
          house2 = '–ö–≤–∞—Ä—Ç–∏—Ä–∞'

       if house == 5:
          house2 = '–û–≥—Ä–æ–º–Ω—ã–π –¥–æ–º'

       if house == 6:
          house2 = '–ö–æ—Ç—Ç–µ–¥–∂'

       if house == 7:
          house2 = '–í–∏–ª–ª–∞'

       if house == 8:
          house2 = '–ó–∞–≥–æ—Ä–æ–¥–Ω—ã–π –¥–æ–º'
         
       if house > 0:
          await bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ –≤–∞—à –¥–æ–ºüè°\n\nüë§ | –í–ª–∞–¥–µ–ª–µ—Ü: {user_name}\nüè† | –î–æ–º: {house2}\n\n‚ÑπÔ∏è –ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –¥–æ–º –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É  \"–ü—Ä–æ–¥–∞—Ç—å –¥–æ–º\"", parse_mode='html')
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –Ω–µ—Ç—É –¥–æ–º–∞, —á—Ç–æ –±—ã –∫—É–ø–∏—Ç—å –¥–æ–º –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–î–æ–º–∞\"", parse_mode='html')
    
    
    if message.text.lower() == '–ø—Ä–æ–¥–∞—Ç—å –¥–æ–º':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_Id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       house = cursor.execute("SELECT house from house where user_id = ?", (message.from_user.id,)).fetchone()
       house = int(house[0])

       if house == 1:
          house2 = '–ö–æ—Ä–æ–±–∫–∞'
          summ = 500000 + summ_basement
          summ2 = '{:,}'.format(summ)
          member_house = 1


       if house == 2:
          house2 = '–°–∞—Ä–∞–π'
          summ = 3000000 + summ_basement
          summ2 = '{:,}'.format(summ)
          member_house = 2
      
       if house == 3:
          house2 = '–ú–∞–ª–µ–Ω—å–∫–∏–π –¥–æ–º–∏–∫'
          summ = 5000000 + summ_basement
          summ2 = '{:,}'.format(summ)
          member_house = 3
      
       if house == 4:
          house2 = '–ö–≤–∞—Ä—Ç–∏—Ä–∞'
          summ = 7000000 + summ_basement
          summ2 = '{:,}'.format(summ)
          member_house = 4
      
       if house == 5:
          house2 = '–û–≥—Ä–æ–º–Ω—ã–π –¥–æ–º'
          summ = 10000000 + summ_basement
          summ2 = '{:,}'.format(summ)
          member_house = 5

       if house == 6:
          house2 = '–ö–æ—Ç—Ç–µ–¥–∂'
          summ = 50000000 + summ_basement
          summ2 = '{:,}'.format(summ)
          member_house = 6

       if house == 7:
          house2 = '–í–∏–ª–ª–∞'
          summ = 100000000 + summ_basement
          summ2 = '{:,}'.format(summ)
          member_house = 7

       if house == 8:
          house2 = '–ó–∞–≥–æ—Ä–æ–¥–Ω—ã–π –¥–æ–º'
          summ = 5000000000 + summ_basement
          summ2 = '{:,}'.format(summ)
          member_house = 8

       if house > 0:
          await bot.send_message(message.chat.id, f"üë® | –ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüè° | –î–µ–π—Å—Ç–≤–∏–µ: –ü—Ä–æ–¥–∞–∂–∞ –¥–æ–º–∞\nüè† | –î–æ–º: {house2}\nüíà | –ü—Ä–æ–¥–∞–Ω–æ –∑–∞: {summ2}‚Ç¨", parse_mode='html')
          cursor.execute(f'UPDATE house SET house = {0} WHERE user_id = {user_id}')
          connect.commit()
          return
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –∏ —Ç–∞–∫ –Ω–µ—Ç—É –¥–æ–º–∞! –ß—Ç–æ –±—ã –∫—É–ø–∏—Ç—å –¥–æ–º –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–î–æ–º–∞\"", parse_mode='html')
          return

    if message.text.startswith('–∫—É–ø–∏—Ç—å –¥–æ–º'):
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_Id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       house = cursor.execute("SELECT house from house where user_id = ?", (message.from_user.id,)).fetchone()
       house = int(house[0])

       member = int(message.text.split()[2])

       if member == 1:
          house2 = '–ö–æ—Ä–æ–±–∫–∞'
          summ = 500000
          summ2 = '{:,}'.format(summ)
          member_house = 1


       if member == 2:
          house2 = '–°–∞—Ä–∞–π'
          summ = 3000000
          summ2 = '{:,}'.format(summ)
          member_house = 2
      
       if member == 3:
          house2 = '–ú–∞–ª–µ–Ω—å–∫–∏–π –¥–æ–º–∏–∫'
          summ = 5000000
          summ2 = '{:,}'.format(summ)
          member_house = 3
      
       if member == 4:
          house2 = '–ö–≤–∞—Ä—Ç–∏—Ä–∞'
          summ = 7000000
          summ2 = '{:,}'.format(summ)
          member_house = 4
      
       if member == 5:
          house2 = '–û–≥—Ä–æ–º–Ω—ã–π –¥–æ–º'
          summ = 10000000
          summ2 = '{:,}'.format(summ)
          member_house = 5

       if member == 6:
          house2 = '–ö–æ—Ç—Ç–µ–¥–∂'
          summ = 50000000
          summ2 = '{:,}'.format(summ)
          member_house = 6

       if member == 7:
          house2 = '–í–∏–ª–ª–∞'
          summ = 100000000
          summ2 = '{:,}'.format(summ)
          member_house = 7

       if member == 8:
          house2 = '–ó–∞–≥–æ—Ä–æ–¥–Ω—ã–π –¥–æ–º'
          summ = 5000000000
          summ2 = '{:,}'.format(summ)
          member_house = 8

       if house == 0:
          if member > 0:
             if member < 9:
                if summ <= balance:
                   await bot.send_message(message.chat.id, f"üë® |–ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüè° | –î–µ–π—Å—Ç–≤–∏–µ: –ü–æ–∫—É–ø–∫–∞ –¥–æ–º–∞\nüè† | –î–æ–º: {house2}\nüíà | –°—Ç–æ–∏–º–æ—Å—Ç—å: {summ2}‚Ç¨", parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ} WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE house SET house = {member_house} WHERE user_id = {user_id}')
                   connect.commit()
                else:
                   await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, —É –≤–∞—Å –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤!", parse_mode='html')               
             else:
                await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –¥–æ–º–∞!", parse_mode='html')
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –¥–æ–º–∞!", parse_mode='html')
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ–º, —á—Ç–æ –±—ã –ø—Ä–æ–¥–∞—Ç—å –¥–æ–º –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–ü—Ä–æ–¥–∞—Ç—å –¥–æ–º\"", parse_mode='html')



    if message.text.startswith('–ö—É–ø–∏—Ç—å –¥–æ–º'):
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_Id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       house = cursor.execute("SELECT house from house where user_id = ?", (message.from_user.id,)).fetchone()
       house = int(house[0])

       member = int(message.text.split()[2])

       if member == 1:
          house2 = '–ö–æ—Ä–æ–±–∫–∞'
          summ = 500000
          summ2 = '{:,}'.format(summ)
          member_house = 1


       if member == 2:
          house2 = '–°–∞—Ä–∞–π'
          summ = 3000000
          summ2 = '{:,}'.format(summ)
          member_house = 2
      
       if member == 3:
          house2 = '–ú–∞–ª–µ–Ω—å–∫–∏–π –¥–æ–º–∏–∫'
          summ = 5000000
          summ2 = '{:,}'.format(summ)
          member_house = 3
      
       if member == 4:
          house2 = '–ö–≤–∞—Ä—Ç–∏—Ä–∞'
          summ = 7000000
          summ2 = '{:,}'.format(summ)
          member_house = 4
      
       if member == 5:
          house2 = '–û–≥—Ä–æ–º–Ω—ã–π –¥–æ–º'
          summ = 10000000
          summ2 = '{:,}'.format(summ)
          member_house = 5

       if member == 6:
          house2 = '–ö–æ—Ç—Ç–µ–¥–∂'
          summ = 50000000
          summ2 = '{:,}'.format(summ)
          member_house = 6

       if member == 7:
          house2 = '–í–∏–ª–ª–∞'
          summ = 100000000
          summ2 = '{:,}'.format(summ)
          member_house = 7

       if member == 8:
          house2 = '–ó–∞–≥–æ—Ä–æ–¥–Ω—ã–π –¥–æ–º'
          summ = 5000000000
          summ2 = '{:,}'.format(summ)
          member_house = 8

       if house == 0:
          if member > 0:
             if member < 9:
                if summ <= balance:
                   await bot.send_message(message.chat.id, f"üë® |–ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüè° | –î–µ–π—Å—Ç–≤–∏–µ: –ü–æ–∫—É–ø–∫–∞ –¥–æ–º–∞\nüè† | –î–æ–º: {house2}\nüíà | –°—Ç–æ–∏–º–æ—Å—Ç—å: {summ2}‚Ç¨", parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ} WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE house SET house = {member_house} WHERE user_id = {user_id}')
                   connect.commit()
                else:
                   await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, —É –≤–∞—Å –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤!", parse_mode='html')               
             else:
                await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –¥–æ–º–∞!", parse_mode='html')
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –¥–æ–º–∞!", parse_mode='html')
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ–º, —á—Ç–æ –±—ã –ø—Ä–æ–¥–∞—Ç—å –¥–æ–º –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–ü—Ä–æ–¥–∞—Ç—å –¥–æ–º\"", parse_mode='html')





    if message.text.lower() == '–¥–æ–º–∞':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       await bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–º–∞:
üè† 1. –ö–æ—Ä–æ–±–∫–∞ - 500.000‚Ç¨
üè† 2. –°–∞—Ä–∞–π - 3.000.000‚Ç¨
üè† 3. –ú–∞–ª–µ–Ω—å–∫–∏–π –¥–æ–º–∏–∫ - 5.000.000‚Ç¨
üè† 4. –ö–≤–∞—Ä—Ç–∏—Ä–∞ - 7.000.000‚Ç¨
üè† 5. –û–≥—Ä–æ–º–Ω—ã–π –¥–æ–º - 10.000.000‚Ç¨
üè† 6. –ö–æ—Ç—Ç–µ–¥–∂ - 50.000.000‚Ç¨
üè† 7. –í–∏–ª–ª–∞ - 100.000.000‚Ç¨
üè† 8. –ó–∞–≥–æ—Ä–æ–¥–Ω—ã–π –¥–æ–º - 5.000.000.000‚Ç¨

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–æ–º–∞ –≤–≤–µ–¥–∏—Ç–µ "–ö—É–ø–∏—Ç—å –¥–æ–º [–Ω–æ–º–µ—Ä]"
       
       """, parse_mode='html')  
       
    if message.text.lower() in ["—Ä–ø-–∫–æ–º–∞–Ω–¥—ã", "–†–ü-–∫–æ–º–∞–Ω–¥—ã"]:
       user_name = message.from_user.get_mention(as_html=True)
       await bot.send_message(message.chat.id, f"{user_name}, —Å–ø–∏—Å–æ–∫ –†–ü-–∫–æ–º–∞–Ω–¥:\nü§ó | –û–±–Ω—è—Ç—å\nüëè | –ü–æ—Ö–ª–æ–ø–∞—Ç—å\nüë®‚Äçüíª | –ó–∞—Å–∫–∞–º–∏—Ç—å\n‚òïÔ∏è | –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —á–∞–π\nüëâüëå | –ò–∑–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å\nü§ù | –í–∑—è—Ç—å –∑–∞ —Ä—É–∫—É\nüì± | –ü–æ–¥–∞—Ä–∏—Ç—å –∞–π—Ñ–æ–Ω\n‚úã | –î–∞—Ç—å –ø—è—Ç—å\nüò¨ | –£–∫—É—Å–∏—Ç—å\nü§õ | –£–¥–∞—Ä–∏—Ç—å\nü§≤ | –ü—Ä–∏–∂–∞—Ç—å\nüíã | –ß–º–æ–∫\nüíã | –ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å\nüòº | –ö—É—Å—å\nü§≤ | –ü—Ä–∏–∂–∞—Ç—å\nüî™ | –£–±–∏—Ç—å\nü§ú | –£–µ–±–∞—Ç—å\nüí∞ | –£–∫—Ä–∞—Å—Ç—å\nüîû | –í—ã–µ–±–∞—Ç—å\nüëÖ | –û—Ç—Å–æ—Å–∞—Ç—å\nüëÖ | –û—Ç–ª–∏–∑–∞—Ç—å\nüîû | –¢—Ä–∞—Ö–Ω—É—Ç—å\nüî• | –°–∂–µ—á—å", parse_mode='html')

    if message.text.lower() in ["—á–º–æ–∫", "–ß–º–æ–∫"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üíã | {user_name} —á–º–æ–∫–Ω—É–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–∫—É—Å—å", "–ö—É—Å—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üòº | {user_name} –∫—É—Å—å–Ω—É–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–æ–±–Ω—è—Ç—å", "–û–±–Ω—è—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"ü§ó | {user_name} –æ–±–Ω—è–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å", "–ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üíã | {user_name} –ø–æ—Ü–µ–ª–æ–≤–∞–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–¥–∞—Ç—å –ø—è—Ç—å", "–î–∞—Ç—å –ø—è—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"‚úã | {user_name} –¥–∞–ª(-–∞) –ø—è—Ç—å {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–ø–æ–¥–∞—Ä–∏—Ç—å –∞–π—Ñ–æ–Ω", "–ü–æ–¥–∞—Ä–∏—Ç—å –∞–π—Ñ–æ–Ω"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üì± | {user_name} –ø–æ–¥–∞—Ä–∏–ª(-–∞) –∞–π—Ñ–æ–Ω {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["—É–¥–∞—Ä–∏—Ç—å", "–£–¥–∞—Ä–∏—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"ü§õ | {user_name} —É–¥–∞—Ä–∏–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–∑–∞—Å–∫–∞–º–∏—Ç—å", "–ó–∞—Å–∫–∞–º–∏—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üë®‚Äçüíª | {user_name} –∑–∞—Å–∫–∞–º–∏–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–ø—Ä–∏–∂–∞—Ç—å", "–ü—Ä–∏–∂–∞—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"ü§≤ | {user_name} –ø—Ä–∏–∂–∞–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["—É–∫—É—Å–∏—Ç—å", "–£–∫—É—Å–∏—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üò¨ | {user_name} —É–∫—É—Å–∏–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–≤–∑—è—Ç—å –∑–∞ —Ä—É–∫—É", "–í–∑—è—Ç—å –∑–∞ —Ä—É–∫—É"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"ü§ù | {user_name} –≤–∑—è–ª(-–∞) –∑–∞ —Ä—É–∫—É {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–ø—Ä–∏–∂–∞—Ç—å", "–ü—Ä–∏–∂–∞—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"ü§≤ | {user_name} –ø—Ä–∏–∂–∞–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–ø–æ—Ö–ª–æ–ø–∞—Ç—å", "–ü–æ—Ö–ª–æ–ø–∞—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üëè | {user_name} –ø–æ—Ö–ª–æ–ø–∞–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å", "–ò–∑–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üëâüëå | {user_name} –∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —á–∞–π", "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —á–∞–π"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"‚òïÔ∏è | {user_name} –ø—Ä–∏–≥–ª–∞—Å–∏–ª(-–∞) –Ω–∞ —á–∞–π {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["—É–±–∏—Ç—å", "–£–±–∏—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üî™ | {user_name} —É–±–∏–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["—É–µ–±–∞—Ç—å", "–£–µ–±–∞—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"ü§ú | {user_name} —É–µ–±–∞–ª(-–∞) {reply_user_name}", parse_mode='html')
    if message.text.lower() in ["—É–∫—Ä–∞—Å—Ç—å", "–£–∫—Ä–∞—Å—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üí∞ | {user_name} —É–∫—Ä–∞–ª(-–∞) {reply_user_name}", parse_mode='html')

    if message.text.lower() in ["–æ—Ç—Å–æ—Å–∞—Ç—å", "–û—Ç—Å–æ—Å–∞—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üëÖ | {user_name} –æ—Ç—Å–æ—Å–∞–ª(-–∞) {reply_user_name}", parse_mode='html')

    if message.text.lower() in ["–æ—Ç–ª–∏–∑–∞—Ç—å", "–û—Ç–ª–∏–∑–∞—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üëÖ | {user_name} –æ—Ç–ª–∏–∑–∞–ª(-–∞) {reply_user_name}", parse_mode='html')

    if message.text.lower() in ["–≤—ã–µ–±–∞—Ç—å", "–í—ã–µ–±–∞—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üîû | {user_name} –≤—ã–µ–±–∞–ª(-–∞) {reply_user_name}", parse_mode='html')

    if message.text.lower() in ["—Å–∂–µ—á—å", "–°–∂–µ—á—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üî• | {user_name} —Å–∂—ë–≥ {reply_user_name}", parse_mode='html')

    if message.text.lower() in ["—Ç—Ä–∞—Ö–Ω—É—Ç—å", "–¢—Ä–∞—Ö–Ω—É—Ç—å"]:
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply = message.reply_to_message
       if reply:
          replyuser = reply.from_user
          await bot.send_message(message.chat.id, f"üîû | {user_name} —Ç—Ä–∞—Ö–Ω—É–ª(-–∞) {reply_user_name}", parse_mode='html')     
          #################################################### !–∫–∞–Ω–∞–ª ################################
    if message.text.lower() in ['–∫–∞–Ω–∞–ª', "!–∫–∞–Ω–∞–ª"]:
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       channel_pov = cursor.execute("SELECT members from channel_pov where user_id = ?", (message.from_user.id,)).fetchone()
       channel_pov = int(channel_pov[0])

       if channel_pov > 0:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –¥–µ–Ω—å–≥–∏ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É")
          return
       
       sub_pov = InlineKeyboardMarkup(row_width=1)
       channel_push = InlineKeyboardButton(text='–ö–ê–ù–ê–õ üîà', url='https://t.me/LayDev')
       channel_poverk = InlineKeyboardButton(text='–ü–†–û–í–ï–†–ò–¢–¨ ‚úÖ', callback_data='channel_poverk')
       sub_pov.add(channel_push, channel_poverk)

       await bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a>,, –≤–æ—Ç —É—Å–ª–æ–≤–∏—è –∑–∞–¥–∞–Ω–∏–µ üí†

üîà | –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª

üí∞ | –ü—Ä–∏–∑: 500.000.000.000.000.000‚Ç¨

‚ÜòÔ∏è –í–∏–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ...       
       """, reply_markup=sub_pov, parse_mode='html')
       user_channel_status = await bot.get_chat_member(chat_id="@LayDev", user_id=message.from_user.id)
       if user_channel_status['status'] != 'left':
          print('GOOD')
       else:
          print('Luser')
###########–ú–ê–®–ò–ù–´#######################################################
    if message.text.lower() == '–º–æ—è –º–∞—à–∏–Ω–∞':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_Id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       cars = cursor.execute("SELECT cars from cars where user_Id = ?", (message.from_user.id,)).fetchone()
       cars = int(cars[0])

       hp = cursor.execute("SELECT hp from cars where user_Id = ?", (message.from_user.id,)).fetchone()
       hp = int(hp[0])

       benz = cursor.execute("SELECT benz from cars where user_Id = ?", (message.from_user.id,)).fetchone()
       benz = int(benz[0])
       if benz < 0:
             benz2 = 0
       else:
          benz2 = benz
       if cars == 1:
          cars_name = '–°–∞–º–æ–∫–∞—Ç'
          cars_summ = 10000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 2:
          cars_name = '–í–µ–ª–æ—Å–∏–ø–µ–¥'
          cars_summ = 15000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 3:
          cars_name = '–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä'
          cars_summ = 30000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 4:
          cars_name = '–°–µ–≥–≤–µ–π'
          cars_summ = 50000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 5:
          cars_name = '–ú–æ–ø–µ–¥'
          cars_summ = 90000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 6:
          cars_name = '–ú–æ—Ç–æ—Ü–∏–∫–ª'
          cars_summ = 100000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 7:
          cars_name = '–í–ê–ó 2109'
          cars_summ = 250000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 8:
          cars_name = '–ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª'
          cars_summ = 400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 9:
          cars_name = '–ë–∞–≥–≥–∏'
          cars_summ = 600000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 10:
          cars_name = '–í–µ–∑–¥–µ—Ö–æ–¥'
          cars_summ = 900000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 11:
          cars_name = '–õ–∞–¥–∞ Xray'
          cars_summ = 1400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 12:
          cars_name = 'Audi Q7'
          cars_summ = 2500000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 13:
          cars_name = 'BMW X6'
          cars_summ = 6000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 14:
          cars_name = 'Toyota FT-HS'
          cars_summ = 8000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 15:
          cars_name = 'BMW Z4 M'
          cars_summ = 10000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 16:
          cars_name = 'Subaru WRX STI'
          cars_summ = 40000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 17:
          cars_name = 'Lamborghini Veneno'
          cars_summ = 100000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 18:
          cars_name = 'Tesla Roadster'
          cars_summ = 300000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       
       if hp in range(76,100):
          hp2 = '–•–æ—Ä–æ—à–æ–µ üü©'

       if hp in range(51,75):
          hp2 = '–°—Ä–µ–¥–Ω–µ–µ üüß '
         
       if hp in range(26,50):
          hp2 = '–ü–ª–æ—Ö–æ–µ üü•'

       if hp in range(2,25):
          hp2 = '–£–∂–∞—Å–Ω–æ–µ üõë'

       if hp < 2:
          hp2 = '–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–º–æ–Ω—Ç ‚õîÔ∏è'

       else:
          if hp == 100:
             hp2 = '–•–æ—Ä–æ—à–æ–µ üü©'
          if hp == 76:
             hp2 = '–•–æ—Ä–æ—à–æ–µ üü©'
          if hp == 75:
             hp2 = '–°—Ä–µ–¥–Ω–µ–µ üüß'
          if hp == 51:
             hp2 = '–°—Ä–µ–¥–Ω–µ–µ üüß'
          if hp == 50:
             hp2 = '–ü–ª–æ—Ö–æ–µ üü•'
          if hp == 26:
             hp2 = '–ü–ª–æ—Ö–æ–µ üü•'
          if hp == 25:
             hp2 = '–£–∂–∞—Å–Ω–æ–µ üõë'
          if hp == 2:
             hp2 = '–£–∂–∞—Å–Ω–æ–µ üõë'

       if cars > 0:
          await bot.send_message(message.chat.id, f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ –≤–∞—à –∞–≤—Ç–æ–º–æ–±–∏–ª—åüöò\n\nüë§ | –í–ª–∞–¥–µ–ª–µ—Ü: {user_name}\nüöì | –ê–≤—Ç–æ–º–æ–±–∏–ª—å: {cars_name}\nüö® | –°–æ—Å—Ç–æ—è–Ω–∏–µ: {hp2}\n‚õΩÔ∏è | –ë–µ–Ω–∑–∏–Ω: {benz2}%\nüí∞ | –°—Ç–æ–∏–º–æ—Å—Ç—å: {cars_summ2}‚Ç¨\n\n‚ÑπÔ∏è –ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–ú–∞—à–∏–Ω—É –ø—Ä–æ–¥–∞—Ç—å\"", parse_mode='html')
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ü–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –∏ —Ç–∞–∫ –Ω–µ—Ç—É –º–∞—à–∏–Ω—ã", parse_mode='html')
     


    if message.text.lower() == '–º–∞—à–∏–Ω—É –ø—Ä–æ–¥–∞—Ç—å':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_Id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       cars = cursor.execute("SELECT cars from cars where user_Id = ?", (message.from_user.id,)).fetchone()
       cars = int(cars[0])

       if cars == 1:
          cars_name = '–°–∞–º–æ–∫–∞—Ç'
          cars_summ = 10000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 2:
          cars_name = '–í–µ–ª–æ—Å–∏–ø–µ–¥'
          cars_summ = 15000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 3:
          cars_name = '–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä'
          cars_summ = 30000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 4:
          cars_name = '–°–µ–≥–≤–µ–π'
          cars_summ = 50000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 5:
          cars_name = '–ú–æ–ø–µ–¥'
          cars_summ = 90000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 6:
          cars_name = '–ú–æ—Ç–æ—Ü–∏–∫–ª'
          cars_summ = 100000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 7:
          cars_name = '–í–ê–ó 2109'
          cars_summ = 250000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 8:
          cars_name = '–ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª'
          cars_summ = 400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 9:
          cars_name = '–ë–∞–≥–≥–∏'
          cars_summ = 600000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 10:
          cars_name = '–í–µ–∑–¥–µ—Ö–æ–¥'
          cars_summ = 900000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 11:
          cars_name = '–õ–∞–¥–∞ Xray'
          cars_summ = 1400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 12:
          cars_name = 'Audi Q7'
          cars_summ = 2500000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 13:
          cars_name = 'BMW X6'
          cars_summ = 6000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 14:
          cars_name = 'Toyota FT-HS'
          cars_summ = 8000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 15:
          cars_name = 'BMW Z4 M'
          cars_summ = 10000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 16:
          cars_name = 'Subaru WRX STI'
          cars_summ = 40000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 17:
          cars_name = 'Lamborghini Veneno'
          cars_summ = 100000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 18:
          cars_name = 'Tesla Roadster'
          cars_summ = 300000000000
          cars_summ2 = '{:,}'.format(cars_summ)


       if cars > 0:
          await bot.send_message(message.chat.id, f"üë® | –ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüöó |–î–µ–π—Å—Ç–≤–∏–µ: –ü—Ä–æ–¥–∞–∂–∞ –º–∞—à–∏–Ω—ã\nüöò | –ú–∞—à–∏–Ω–∞: {cars_name}\nüíà |–ü—Ä–æ–¥–∞–Ω–Ω–æ –∑–∞: {cars_summ2}‚Ç¨", parse_mode='html')
          cursor.execute(f'UPDATE cars SET cars = {0} WHERE user_id = {user_id}')
          cursor.execute(f'UPDATE cars SET hp = {0} WHERE user_id = {user_id}')
          cursor.execute(f'UPDATE cars SET benz = {0} WHERE user_id = {user_id}')
          connect.commit()
          return
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ü–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –∏ —Ç–∞–∫ –Ω–µ—Ç—É –º–∞—à–∏–Ω—ã", parse_mode='html')
          return
      
    if message.text.startswith('–ö—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É'):
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_Id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       cars = cursor.execute("SELECT cars from cars where user_Id = ?", (message.from_user.id,)).fetchone()
       cars = int(cars[0])

       member = int(message.text.split()[2])
       
       if member == 1:
          cars_name = '–°–∞–º–æ–∫–∞—Ç'
          cars_summ = 10000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 2:
          cars_name = '–í–µ–ª–æ—Å–∏–ø–µ–¥'
          cars_summ = 15000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 3:
          cars_name = '–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä'
          cars_summ = 30000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 4:
          cars_name = '–°–µ–≥–≤–µ–π'
          cars_summ = 50000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 5:
          cars_name = '–ú–æ–ø–µ–¥'
          cars_summ = 90000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 6:
          cars_name = '–ú–æ—Ç–æ—Ü–∏–∫–ª'
          cars_summ = 100000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 7:
          cars_name = '–í–ê–ó 2109'
          cars_summ = 250000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 8:
          cars_name = '–ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª'
          cars_summ = 400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 9:
          cars_name = '–ë–∞–≥–≥–∏'
          cars_summ = 600000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 10:
          cars_name = '–í–µ–∑–¥–µ—Ö–æ–¥'
          cars_summ = 900000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 11:
          cars_name = '–õ–∞–¥–∞ Xray'
          cars_summ = 1400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 12:
          cars_name = 'Audi Q7'
          cars_summ = 2500000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 13:
          cars_name = 'BMW X6'
          cars_summ = 6000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 14:
          cars_name = 'Toyota FT-HS'
          cars_summ = 8000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 15:
          cars_name = 'BMW Z4 M'
          cars_summ = 10000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 16:
          cars_name = 'Subaru WRX STI'
          cars_summ = 40000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 17:
          cars_name = 'Lamborghini Veneno'
          cars_summ = 100000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 18:
          cars_name = 'Tesla Roadster'
          cars_summ = 300000000000
          cars_summ2 = '{:,}'.format(cars_summ)


       if member > 0:
          if member < 19:
             if cars == 0:
                if balance >= cars_summ:
                   await bot.send_message(message.chat.id, f"üßëüèª‚Äçü¶± | –ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüöó |–î–µ–π—Å—Ç–≤–∏–µ: –ü–æ–∫—É–ø–∫–∞ –º–∞—à–∏–Ω—ã\nüöò | –ú–∞—à–∏–Ω–∞: {cars_name}\nüíà |–°—Ç–æ–∏–º–æ—Å—Ç—å: {cars_summ2}‚Ç¨", parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - cars_summ} WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE cars SET cars = {member} WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE cars SET hp = {100} WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE cars SET benz = {100} WHERE user_id = {user_id}')
                   connect.commit()
                else:
                   await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", parse_mode='html')
             else:
                await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –û—à–∏–±–∫–∞! –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞", parse_mode='html')
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ü–æ–¥–æ–∂–¥–∏—Ç–µ! –ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–∞—à–∏–Ω—ã", parse_mode='html')
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ü–æ–¥–æ–∂–¥–∏—Ç–µ! –ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–∞—à–∏–Ω—ã", parse_mode='html')

    if message.text.startswith('–∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É'):
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_Id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       cars = cursor.execute("SELECT cars from cars where user_Id = ?", (message.from_user.id,)).fetchone()
       cars = int(cars[0])

       member = int(message.text.split()[2])
       
       if member == 1:
          cars_name = '–°–∞–º–æ–∫–∞—Ç'
          cars_summ = 10000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 2:
          cars_name = '–í–µ–ª–æ—Å–∏–ø–µ–¥'
          cars_summ = 15000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 3:
          cars_name = '–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä'
          cars_summ = 30000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 4:
          cars_name = '–°–µ–≥–≤–µ–π'
          cars_summ = 50000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 5:
          cars_name = '–ú–æ–ø–µ–¥'
          cars_summ = 90000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 6:
          cars_name = '–ú–æ—Ç–æ—Ü–∏–∫–ª'
          cars_summ = 100000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 7:
          cars_name = '–í–ê–ó 2109'
          cars_summ = 250000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 8:
          cars_name = '–ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª'
          cars_summ = 400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 9:
          cars_name = '–ë–∞–≥–≥–∏'
          cars_summ = 600000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 10:
          cars_name = '–í–µ–∑–¥–µ—Ö–æ–¥'
          cars_summ = 900000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 11:
          cars_name = '–õ–∞–¥–∞ Xray'
          cars_summ = 1400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 12:
          cars_name = 'Audi Q7'
          cars_summ = 2500000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 13:
          cars_name = 'BMW X6'
          cars_summ = 6000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 14:
          cars_name = 'Toyota FT-HS'
          cars_summ = 8000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 15:
          cars_name = 'BMW Z4 M'
          cars_summ = 10000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 16:
          cars_name = 'Subaru WRX STI'
          cars_summ = 40000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 17:
          cars_name = 'Lamborghini Veneno'
          cars_summ = 100000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if member == 18:
          cars_name = 'Tesla Roadster'
          cars_summ = 300000000000
          cars_summ2 = '{:,}'.format(cars_summ)


       if member > 0:
          if member < 19:
             if cars == 0:
                if balance >= cars_summ:
                   await bot.send_message(message.chat.id, f"üë® | –ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüöó |–î–µ–π—Å—Ç–≤–∏–µ: –ü–æ–∫—É–ø–∫–∞ –º–∞—à–∏–Ω—ã\nüöò | –ú–∞—à–∏–Ω–∞: {cars_name}\nüíà |–°—Ç–æ–∏–º–æ—Å—Ç—å: {cars_summ2}‚Ç¨", parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - cars_summ} WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE cars SET cars = {member} WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE cars SET hp = {100} WHERE user_id = {user_id}')
                   cursor.execute(f'UPDATE cars SET benz = {100} WHERE user_id = {user_id}')
                   connect.commit()
                else:
                   await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", parse_mode='html')
             else:
                await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –û—à–∏–±–∫–∞! –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞", parse_mode='html')
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ü–æ–¥–æ–∂–¥–∏—Ç–µ! –ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–∞—à–∏–Ω—ã", parse_mode='html')
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ü–æ–¥–æ–∂–¥–∏—Ç–µ! –ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–∞—à–∏–Ω—ã", parse_mode='html')










    if message.text.lower() == '–º–∞—à–∏–Ω—ã':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       await bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—à–∏–Ω—ã:
üöó 1. –°–∞–º–æ–∫–∞—Ç - 10.000.000‚Ç¨
üöó 2. –í–µ–ª–æ—Å–∏–ø–µ–¥ - 15.000.000‚Ç¨
üöó 3. –ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä - 30.000.000‚Ç¨
üöó 4. –°–µ–≥–≤–µ–π - 50.000.000‚Ç¨
üöó 5. –ú–æ–ø–µ–¥ - 90.000.000‚Ç¨
üöó 6. –ú–æ—Ç–æ—Ü–∏–∫–ª - 100.000.000‚Ç¨
üöó 7. –í–ê–ó 2109 - 250.000.000‚Ç¨
üöó 8. –ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª - 400.000.000‚Ç¨
üöó 9. –ë–∞–≥–≥–∏ - 600.000.000‚Ç¨
üöó 10. –í–µ–∑–¥–µ—Ö–æ–¥ - 900.000.000‚Ç¨
üöó 11. –õ–∞–¥–∞ Xray - 1.400.000.000‚Ç¨
üöó 12. Audi Q7 - 2.500.000.000‚Ç¨
üöó 13. BMW X6 - 6.000.000.000‚Ç¨
üöó 14. Toyota FT-HS - 8.000.000.000‚Ç¨
üöó 15. BMW Z4 M - 10.000.000.000‚Ç¨
üöó 16. Subaru WRX STI - 40.000.000.000‚Ç¨
üöó 17. Lamborghini Veneno - 100.000.000.000‚Ç¨
üöó 18. Tesla Roadster - 300.000.000.000‚Ç¨

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –º–∞—à–∏–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "–ö—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É [–Ω–æ–º–µ—Ä]"    
       
""", parse_mode='html')
            
#######################################–ì–û–ù–ö–ê###############
    if message.text.startswith('–≥–æ–Ω–∫–∞'):

       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id
       
       loser = ['üòê', 'üòï','üòü','üòî','üòì']
       rloser = random.choice(loser)

       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       cars = cursor.execute("SELECT cars from cars where user_id = ?", (message.from_user.id,)).fetchone()
       cars = cars[0]

       hp = cursor.execute("SELECT hp from cars where user_id = ?", (message.from_user.id,)).fetchone()
       hp = int(hp[0])

       benz = cursor.execute("SELECT benz from cars where user_id = ?", (message.from_user.id,)).fetchone()
       benz = int(benz[0])

       summ = float(message.text.split()[1])
       summ2 = '{:,}'.format(summ)

       if cars == 1:
          cars_name = '–°–∞–º–æ–∫–∞—Ç'
          cars_summ = 10000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 2:
          cars_name = '–í–µ–ª–æ—Å–∏–ø–µ–¥'
          cars_summ = 15000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 3:
          cars_name = '–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä'
          cars_summ = 30000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 4:
          cars_name = '–°–µ–≥–≤–µ–π'
          cars_summ = 50000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 5:
          cars_name = '–ú–æ–ø–µ–¥'
          cars_summ = 90000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 6:
          cars_name = '–ú–æ—Ç–æ—Ü–∏–∫–ª'
          cars_summ = 100000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 7:
          cars_name = '–í–ê–ó 2109'
          cars_summ = 250000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 8:
          cars_name = '–ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª'
          cars_summ = 400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 9:
          cars_name = '–ë–∞–≥–≥–∏'
          cars_summ = 600000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 10:
          cars_name = '–í–µ–∑–¥–µ—Ö–æ–¥'
          cars_summ = 900000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 11:
          cars_name = '–õ–∞–¥–∞ Xray'
          cars_summ = 1400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 12:
          cars_name = 'Audi Q7'
          cars_summ = 2500000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 13:
          cars_name = 'BMW X6'
          cars_summ = 6000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 14:
          cars_name = 'Toyota FT-HS'
          cars_summ = 8000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 15:
          cars_name = 'BMW Z4 M'
          cars_summ = 10000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 16:
          cars_name = 'Subaru WRX STI'
          cars_summ = 40000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 17:
          cars_name = 'Lamborghini Veneno'
          cars_summ = 100000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 18:
          cars_name = 'Tesla Roadster'
          cars_summ = 300000000000
          cars_summ2 = '{:,}'.format(cars_summ)


       rx = random.randint(0,1000)
       rx2 = random.randint(1,25)
       summ3 = summ * 2
       summ4 = '{:,}'.format(summ3)

       period = 5
       get–µ = cursor.execute("SELECT stavka_games FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
       last_stavka = int(get–µ[0])
       stavkatime = time.time() - float(last_stavka)
       if stavkatime > period:
          if summ <= balance:
             if cars > 0:
                if hp > 0:
                   if benz > 0:
                      if int(rx) in range(0,600):
                         await bot.send_message(message.chat.id, f"ü§µ‚Äç‚ôÇÔ∏è | –ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüèé | –ò–≥—Ä–∞: –ì–æ–Ω–∫–∏\nüöò | –ú–∞—à–∏–Ω–∞: {cars_name}\nüéü | –°—Ç–∞–≤–∫–∞: {summ2}‚Ç¨\nüßæ | –í—ã–∏–≥—Ä—ã—à: 0‚Ç¨", parse_mode='html')
                         cursor.execute(f'UPDATE cars SET hp = {hp - rx2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE users SET balance = {balance - summ} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE cars SET benz = {benz - rx2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE bot_time SET stavka_games = {time.time()} WHERE user_id = {user_id}')
                         connect.commit()
                      if int(rx) in range(601, 1000):
                         await bot.send_message(message.chat.id, f"ü§µ‚Äç‚ôÇÔ∏è | –ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüèé | –ò–≥—Ä–∞: –ì–æ–Ω–∫–∏\nüöò | –ú–∞—à–∏–Ω–∞: {cars_name}\nüéü | –°—Ç–∞–≤–∫–∞: {summ2}‚Ç¨\nüßæ | –í—ã–∏–≥—Ä—ã—à: {summ4}‚Ç¨", parse_mode='html')
                         cursor.execute(f'UPDATE users SET balance = {balance - summ} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE users SET balance = {balance + summ * 2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE cars SET hp = {hp - rx2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE cars SET benz = {benz - rx2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE bot_time SET stavka_games = {time.time()} WHERE user_id = {user_id}')
                         connect.commit()
                   else:
                      await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –±–µ–Ω–∑–∏–Ω –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ", parse_mode='html')
                else:
                   await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –ø–æ–ª–æ–º–∞–ª—Å—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å , –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≥–æ–Ω–∫–∞—Ö", parse_mode='html')
             else:
                await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –ö–∞–∫–∏–µ –≥–æ–Ω–∫–∏ –±–µ–∑ –∞–≤—Ç–æ–º–æ–±–∏–ª—è? –ö—É–ø–∏—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å", parse_mode='html') 
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤", parse_mode='html') 
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –∏–≥—Ä–∞–π –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ {period} —Å–µ–∫—É–Ω–¥", parse_mode='html') 


    if message.text.startswith('–ì–æ–Ω–∫–∞'):

       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id
       
       loser = ['üòê', 'üòï','üòü','üòî','üòì']
       rloser = random.choice(loser)

       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       cars = cursor.execute("SELECT cars from cars where user_id = ?", (message.from_user.id,)).fetchone()
       cars = cars[0]

       hp = cursor.execute("SELECT hp from cars where user_id = ?", (message.from_user.id,)).fetchone()
       hp = int(hp[0])

       benz = cursor.execute("SELECT benz from cars where user_id = ?", (message.from_user.id,)).fetchone()
       benz = int(benz[0])

       summ = float(message.text.split()[1])
       summ2 = '{:,}'.format(summ)

       if cars == 1:
          cars_name = '–°–∞–º–æ–∫–∞—Ç'
          cars_summ = 10000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 2:
          cars_name = '–í–µ–ª–æ—Å–∏–ø–µ–¥'
          cars_summ = 15000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 3:
          cars_name = '–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä'
          cars_summ = 30000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 4:
          cars_name = '–°–µ–≥–≤–µ–π'
          cars_summ = 50000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 5:
          cars_name = '–ú–æ–ø–µ–¥'
          cars_summ = 90000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 6:
          cars_name = '–ú–æ—Ç–æ—Ü–∏–∫–ª'
          cars_summ = 100000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 7:
          cars_name = '–í–ê–ó 2109'
          cars_summ = 250000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 8:
          cars_name = '–ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª'
          cars_summ = 400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 9:
          cars_name = '–ë–∞–≥–≥–∏'
          cars_summ = 600000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 10:
          cars_name = '–í–µ–∑–¥–µ—Ö–æ–¥'
          cars_summ = 900000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 11:
          cars_name = '–õ–∞–¥–∞ Xray'
          cars_summ = 1400000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 12:
          cars_name = 'Audi Q7'
          cars_summ = 2500000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 13:
          cars_name = 'BMW X6'
          cars_summ = 6000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 14:
          cars_name = 'Toyota FT-HS'
          cars_summ = 8000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 15:
          cars_name = 'BMW Z4 M'
          cars_summ = 10000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 16:
          cars_name = 'Subaru WRX STI'
          cars_summ = 40000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 17:
          cars_name = 'Lamborghini Veneno'
          cars_summ = 100000000000
          cars_summ2 = '{:,}'.format(cars_summ)
       if cars == 18:
          cars_name = 'Tesla Roadster'
          cars_summ = 300000000000
          cars_summ2 = '{:,}'.format(cars_summ)


       rx = random.randint(0,1000)
       rx2 = random.randint(1,25)
       summ3 = summ * 2
       summ4 = '{:,}'.format(summ3)

       period = 5
       get–µ = cursor.execute("SELECT stavka_games FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
       last_stavka = int(get–µ[0])
       stavkatime = time.time() - float(last_stavka)
       if stavkatime > period:
          if summ <= balance:
             if cars > 0:
                if hp > 0:
                   if benz > 0:
                      if int(rx) in range(0,600):
                         await bot.send_message(message.chat.id, f"ü§µ‚Äç‚ôÇÔ∏è | –ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüèé | –ò–≥—Ä–∞: –ì–æ–Ω–∫–∏\nüöò | –ú–∞—à–∏–Ω–∞: {cars_name}\nüéü | –°—Ç–∞–≤–∫–∞: {summ2}‚Ç¨\nüßæ | –í—ã–∏–≥—Ä—ã—à: 0‚Ç¨", parse_mode='html')
                         cursor.execute(f'UPDATE cars SET hp = {hp - rx2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE users SET balance = {balance - summ} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE cars SET benz = {benz - rx2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE bot_time SET stavka_games = {time.time()} WHERE user_id = {user_id}')
                         connect.commit()
                      if int(rx) in range(601, 1000):
                         await bot.send_message(message.chat.id, f"ü§µ‚Äç‚ôÇÔ∏è | –ò–≥—Ä–æ–∫: <a href='tg://user?id={user_id}'>{user_name}</a>\nüèé | –ò–≥—Ä–∞: –ì–æ–Ω–∫–∏\nüöò | –ú–∞—à–∏–Ω–∞: {cars_name}\nüéü | –°—Ç–∞–≤–∫–∞: {summ2}‚Ç¨\nüßæ | –í—ã–∏–≥—Ä—ã—à: {summ4}‚Ç¨", parse_mode='html')
                         cursor.execute(f'UPDATE users SET balance = {balance - summ} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE users SET balance = {balance + summ * 2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE cars SET hp = {hp - rx2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE cars SET benz = {benz - rx2} WHERE user_id = {user_id}')
                         cursor.execute(f'UPDATE bot_time SET stavka_games = {time.time()} WHERE user_id = {user_id}')
                         connect.commit()
                   else:
                      await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –±–µ–Ω–∑–∏–Ω –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ", parse_mode='html')
                else:
                   await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –ø–æ–ª–æ–º–∞–ª—Å—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å , –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≥–æ–Ω–∫–∞—Ö", parse_mode='html')
             else:
                await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –ö–∞–∫–∏–µ –≥–æ–Ω–∫–∏ –±–µ–∑ –∞–≤—Ç–æ–º–æ–±–∏–ª—è? –ö—É–ø–∏—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å", parse_mode='html') 
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –£ –≤–∞—Å –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤", parse_mode='html') 
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! –∏–≥—Ä–∞–π –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ {period} —Å–µ–∫—É–Ω–¥", parse_mode='html') 
          
###–°–°–´–õ–ö–ò###########          
    if message.text.lower() in ["–°—Å—ã–ª–∫–∏", "—Å—Å—ã–ª–∫–∏"]:
        msg = message
        user_name = message.from_user.get_mention(as_html=True)
        win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
        rwin = random.choice(win)
        rx = random.randint(0,100)
        await bot.send_message(message.chat.id, f'{rwin} {user_name} –í–æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –±–æ—Ç–∞ -\n\nüí¨–ß–∞—Ç: @LayGame\nüìä–ö–∞–Ω–∞–ª: @LayDev\nüßë‚Äçüíª–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @XennuKinDer', parse_mode='html')     
###################################### –∞–≤–∞—Ç–∞—Ä–∫–∏ #######################################
    if message.text.lower() in ['—É–±—Ä–∞—Ç—å –∞–≤—É', "—É–±—Ä–∞—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É", "—É–¥–∞–ª–∏—Ç—å –∞–≤—É", "—É–¥–∞–ª–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É"]:
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0]) 

       await bot.send_message(message.chat.id, f"ü™£ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Å–≤–æ—é –∞–≤–∞—Ç–∞—Ä–∫—É", parse_mode='html')
       cursor.execute(f'UPDATE avatarka SET avatarka = "none" WHERE user_id = {user_id}')
       connect.commit()


    if message.text.lower() in ['–∞–≤–∞', '–∞–≤–∞—Ç–∞—Ä–∫–∏', "–∞–≤–∞—Ç–∞—Ä–∫–∞", "—Ñ–æ—Ç–æ"]:
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       strach_photo = open('—Å—Ç—Ä–∞–∂.jpg', 'rb')

       cheat_photo = open('cheat.jpg', 'rb')

       apper_photo = open('apper.jpg', 'rb')

       dyp_photo = open('–¥—é–ø.jpg', 'rb')

       girl_photo = open('girl.jpg', 'rb')

       admin_photo = open('–∞–¥–º–∏–Ω.jpg', 'rb')

       ava_strach = InlineKeyboardMarkup(row_width=1)
       ava_strach2 = InlineKeyboardButton(text='–ü–û–°–¢–ê–í–ò–¢–¨ üñº', callback_data='ava_strach')
       ava_strach.add(ava_strach2)

       ava_cheat = InlineKeyboardMarkup(row_width=1)
       ava_cheat2 = InlineKeyboardButton(text='–ü–û–°–¢–ê–í–ò–¢–¨ üñº', callback_data='ava_cheat')
       ava_cheat.add(ava_cheat2)

       ava_apper = InlineKeyboardMarkup(row_width=1)
       ava_apper2 = InlineKeyboardButton(text='–ü–û–°–¢–ê–í–ò–¢–¨ üñº', callback_data='ava_apper')
       ava_apper.add(ava_apper2)

       ava_dyp = InlineKeyboardMarkup(row_width=1)
       ava_dyp2 = InlineKeyboardButton(text='–ü–û–°–¢–ê–í–ò–¢–¨ üñº', callback_data='ava_dyp')
       ava_dyp.add(ava_dyp2)

       ava_girl = InlineKeyboardMarkup(row_width=1)
       ava_girl2 = InlineKeyboardButton(text='–ü–û–°–¢–ê–í–ò–¢–¨ üñº', callback_data='ava_girl')
       ava_girl.add(ava_girl2)

       ava_admin = InlineKeyboardMarkup(row_width=1)
       ava_admin2 = InlineKeyboardButton(text='–ü–û–°–¢–ê–í–ò–¢–¨ üñº', callback_data='ava_admin')
       ava_admin.add(ava_admin2)

       await bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –∞–≤–∞—Ç–∞—Ä–æ–∫ üóæ

‚ÑπÔ∏è | –í—Å–µ–≥–æ –∞–≤–∞—Ç–∞—Ä–æ–∫: 4

‚ÑπÔ∏è | –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä–∫–∏: –î–Æ–ü–ü–ï–†, –°–¢–†–ê–ñ, –ê–ü–ü–ï–†, –ß–ò–¢–ï–†, –î–ï–í–£–®–ö–ê

‚õîÔ∏è | –ê–¥–º–∏–Ω: –ê–î–ú–ò–ù

‚ÑπÔ∏è | –ê–≤–∞—Ç–∞—Ä–∫–∞ —Å—Ç–∞–≤–∏—Ç—å—Å—è –Ω–∞ –±–∞–ª–∞–Ω—Å

‚ÜòÔ∏è | –í–∏–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∞–≤–∞—Ç–∞—Ä–æ–∫ –Ω–∏–∂–µ 
       """, parse_mode='html')
       await bot.send_photo(message.chat.id, strach_photo, '', reply_markup=ava_strach)
       await bot.send_photo(message.chat.id, cheat_photo, '', reply_markup=ava_cheat)
       await bot.send_photo(message.chat.id, apper_photo, '', reply_markup=ava_apper)
       await bot.send_photo(message.chat.id, dyp_photo, '', reply_markup=ava_dyp)
       await bot.send_photo(message.chat.id, girl_photo, '', reply_markup=ava_girl)
       await bot.send_photo(message.chat.id, admin_photo, '', reply_markup=ava_admin)         
#############–®–ê–ù–°#############################################
    if message.text.lower() in ["–®–∞–Ω—Å", "—à–∞–Ω—Å"]:
        msg = message
        user_name = message.from_user.get_mention(as_html=True)
        win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
        rwin = random.choice(win)
        rx = random.randint(0,100)
        await bot.send_message(message.chat.id, f'üîÆ | {user_name}, —à–∞–Ω—Å —ç—Ç–æ–≥–æ: {rx}%', parse_mode='html')
    if message.text.lower() in ["–®–∞–Ω—Å—ã", "—à–∞–Ω—Å—ã"]:
        msg = message
        user_name = message.from_user.get_mention(as_html=True)
        await bot.send_message(message.chat.id,f'üîÆ {user_name}, –í–æ—Ç —Ç–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π\n\n‚ÑπÔ∏è –û—Ç–≤–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥–æ–π (—à–∞–Ω—Å)', parse_mode='html')
###########################################–û–°–¢–û–õ–¨–ù–û–ï###########################################
    if message.text.lower() in ["–û—Å—Ç–∞–ª—å–Ω–æ–µ", "–æ—Å—Ç–∞–ª—å–Ω–æ–µ"]:
        msg = message
        user_name = message.from_user.get_mention(as_html=True)
        win = ['üôÇ', 'üòã', 'üëä', 'ü§ë', 'üòå']
        rwin = random.choice(win)
        await bot.send_message(message.chat.id,
                               f'‚ö†Ô∏è  {user_name}, –í–æ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ –ø—É–Ω–∫—Ç—É  –æ—Å—Ç–∞–ª—å–Ω–æ–µ, {rwin} \nüéØ –®–∞–Ω—Å - —É–∑–Ω–∞—Ç—å —à–∞–Ω—Å –∫–∞–∑–∏–Ω–æ,\nüé∞ –®–∞–Ω—Å—ã - —É–∑–Ω–∞—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ "—à–∞–Ω—Å"\nüßë‚Äçüíª –ü—Ä–∞–≤–∏–ª–∞ - —É–∑–Ω–∞—Ç—å –æ—Å–æ–±–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞\n üå™ –°—Å—ã–ª–∫–∏ - —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –±–æ—Ç–∞\n üí∞ –î–æ–Ω–∞—Ç - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–æ–≤–æ–¥—É –¥–æ–Ω–∞—Ç–∞',
                               parse_mode='html')

###########################################–ü–û–ú–û–©–¨###########################################
    if message.text.lower() in ["–ø–æ–º–æ—â—å", "–ü–æ–º–æ—â—å"]:
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       help2 = InlineKeyboardMarkup(row_width=2)
       Osn2 = InlineKeyboardButton(text='–û—Å–Ω–æ–≤–Ω—ã–µ üìù', callback_data='Osn2')
       game2 = InlineKeyboardButton(text='–ò–≥—Ä—ã üéÆ', callback_data='game2')
       rabot2 = InlineKeyboardButton(text='–†–∞–±–æ—Ç—ã üî®', callback_data='rabot2')
       Im2 = InlineKeyboardButton(text='–ò–º—É—â–µ—Å—Ç–≤–æ üèò ', callback_data='Im2')
       Priv2 = InlineKeyboardButton(text='–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ üìñ', callback_data='Priv2')
       Adm2 = InlineKeyboardButton(text='Admins menu ‚õîÔ∏è', callback_data='Admins_menu_up')
       help2.add(Osn2, game2, rabot2, Im2, Priv2, Adm2)
       await bot.send_message(message.chat.id, f'''
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–∏–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üîç

üìù | –û—Å–Ω–æ–≤–Ω—ã–µ
üéÆ | –ò–≥—Ä—ã 
üî® | –†–∞–±–æ—Ç—ã
üèò | –ò–º—É—â–µ—Å—Ç–≤–æ
üìñ | –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏
‚õîÔ∏è | Admins menu 

–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @XennuKinDerüíª
–ù–∞—à–∞ –±–µ—Å–µ–¥–∞: <tg-spoiler>@LayGame</tg-spoiler> üí¨ 
–ù–∞—à–∞ –±–µ—Å–µ–¥–∞: <tg-spoiler>@LayGame2</tg-spoiler> üí¨ 
    ''', reply_markup=help2, parse_mode='html')

###########################################–ü–†–ê–í–ò–õ–ê###########################################
    if message.text.lower() in ["–ü—Ä–∞–≤–∏–ª–∞", "–ø—Ä–∞–≤–∏–ª–∞"]:
       await bot.send_message(message.chat.id, f"""
ü§¨ | 1. –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ [–ú—É—Ç - 15 –º–∏–Ω—É—Ç ]
ü§¨ | 1.1 –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏ [–ú—É—Ç - 10 –º–∏–Ω—É—Ç]
ü§¨ | 1.2 –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª–µ–º/—Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ [–ú—É—Ç - 2 —á–∞—Å–∞] + [ –í–∞—Ä–Ω ]
ü§¨ | 1.3 –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ [–ú—É—Ç - –æ—Ç 2 –¥–æ 5 —á–∞—Å–æ–≤ ] + [ –í–∞—Ä–Ω ]
ü§¨ | 1.4 –ü—Ä–æ–≤–æ–∫–∞—Ü–∏—è –Ω–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ [–ú—É—Ç - 5 –º–∏–Ω—É—Ç]
üîû | 2. –ü–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—è –≤ –ª—é–±–æ–º –≤–∏–¥–µ [–ú—É—Ç - 5 –º–∏–Ω—É—Ç]
üîû | 2.1 –°–ø–∞–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏–∏ [ –ú—É—Ç - 15 –º–∏–Ω—É—Ç ]
üö∑ | 3. –û–±–º–∞–Ω –∏–≥—Ä–æ–∫–æ–≤ [ –ë–∞–Ω - 1 –¥–µ–Ω—å ] + [ –í–∞—Ä–Ω ]
‚õîÔ∏è | 4. –ü—Ä–æ–¥–∞–∂–∞ –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã [ –ë–∞–Ω - 7 –¥–Ω–µ–π ] + [ –í–∞—Ä–Ω ] + [ –û–±–Ω—É–ª–µ–Ω–∏–µ ]
‚õîÔ∏è | 4.1 –ü—Ä–æ–¥–∞–∂–∞ "–°—Ö–µ–º –∑–∞—Ä–∞–±–æ—Ç–∫–∞" [–ë–∞–Ω - 3 –¥–Ω—è ] + [ –í–∞—Ä–Ω ]
‚ö†Ô∏è | 5. –ö–∞–ø—Å (–ü–†–ò–ú–ï–†) [ –ú—É—Ç - 1 –º–∏–Ω—É—Ç–∞ ]
‚ö†Ô∏è | 5.1 –§–ª—É–¥ , —Å–ø–∞–º [ –ú—É—Ç - 15 –º–∏–Ω—É—Ç ]
‚ö†Ô∏è | 5.2 –ù–µ —Å–æ–≥–ª–∞—à—ë–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ [ –ú—É—Ç - 1 —á–∞—Å ] 
üÜò | 6. –õ—é–±—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤—Ä–µ–¥–æ–º –ø—Ä–æ–µ–∫—Ç—É [ –ë–∞–Ω - 1 –¥–µ–Ω—å ] + [ –í–∞—Ä–Ω ] [–ï—Å–ª–∏ –≤—Ä–µ–¥ –±—ã–ª –Ω–∞–Ω–µ—Å—ë–Ω —Ç–æ–≥–¥–∞ —á—Å –ø—Ä–æ–µ–∫—Ç–∞ ]
üÜò | 6.1 –ß–∏—Ç–µ—Ä—Å—Ç–≤–æ/–î—é–ø–∏–Ω–≥ –≤ –±–æ—Ç–µ [ –û–±–Ω—É–ª–µ–Ω–∏–µ ] + [ –í–∞—Ä–Ω ]      
       """, parse_mode='html')                               
###########################################–ê–î–ú–ò–ù –ö–û–ú–ê–ù–î–´###########################################
    if message.text.startswith("–≤—ã–¥–∞—Ç—å"):
       msg = message
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = reply_user_name[0]
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       perevod = int(msg.text.split()[1])
       reply_user_id = msg.reply_to_message.from_user.id
       perevod2 = '{:,}'.format(perevod)
       user_id = msg.from_user.id
       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])
       if user_status[0] == 'Admin':
          await message.reply(f"üìñ | {user_name} –í—ã –≤—ã–¥–∞–ª–∏ {perevod2}‚Ç¨ –∏–≥—Ä–æ–∫—É <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Owner':
          await message.reply(f"üìñ | {user_name} –í—ã –≤—ã–¥–∞–ª–∏ {perevod2}‚Ç¨ –∏–≥—Ä–æ–∫—É <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Player':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!", parse_mode='html')  

    if message.text.startswith("–í—ã–¥–∞—Ç—å"):
       msg = message
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = reply_user_name[0]
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       perevod = int(msg.text.split()[1])
       reply_user_id = msg.reply_to_message.from_user.id
       perevod2 = '{:,}'.format(perevod)
       user_id = msg.from_user.id
       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])
       if user_status[0] == 'Admin':
          await message.reply(f"üí∞ | –í—ã –≤—ã–¥–∞–ª–∏ {perevod2}‚Ç¨ –ò–≥—Ä–æ–∫—É <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Owner':
          await message.reply(f"üí∞ | –í—ã –≤—ã–¥–∞–ª–∏ {perevod2}‚Ç¨ –∏–≥—Ä–æ–∫—É <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Player':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!", parse_mode='html')  

    if message.text.startswith("–∑–∞–±—Ä–∞—Ç—å"):
       msg = message
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = reply_user_name[0]
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       perevod = int(msg.text.split()[1])
       reply_user_id = msg.reply_to_message.from_user.id
       perevod2 = '{:,}'.format(perevod)
       user_id = msg.from_user.id
       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])
       if user_status[0] == 'Admin':
          await message.reply(f"üí∞ | –í—ã –∑–∞–±—Ä–∞–ª–∏ {perevod2}‚Ç¨ —É –∏–≥—Ä–æ–∫–∞ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 - perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Owner':
          await message.reply(f"üí∞ | –í—ã –∑–∞–±—Ä–∞–ª–∏ {perevod2}‚Ç¨ —É –∏–≥—Ä–æ–∫–∞ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 - perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Player':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!", parse_mode='html')  

    if message.text.startswith("–ó–∞–±—Ä–∞—Ç—å"):
       msg = message
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = reply_user_name[0]
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       perevod = int(msg.text.split()[1])
       reply_user_id = msg.reply_to_message.from_user.id
       perevod2 = '{:,}'.format(perevod)
       user_id = msg.from_user.id
       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])
       if user_status[0] == 'Admin':
          await message.reply(f"üí∞ | –í—ã –∑–∞–±—Ä–∞–ª–∏ {perevod2}‚Ç¨ —É –∏–≥—Ä–æ–∫–∞ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 - perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Owner':
          await message.reply(f"üí∞ | –í—ã –∑–∞–±—Ä–∞–ª–∏ {perevod2}‚Ç¨ —É –∏–≥—Ä–æ–∫–∞ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 - perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Player':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!", parse_mode='html')  

    if message.text.lower() in ["–æ–±–Ω—É–ª–∏—Ç—å", "–û–±–Ω—É–ª–∏—Ç—å"]:
       msg = message
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = reply_user_name[0]
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       reply_user_id = msg.reply_to_message.from_user.id
       user_id = msg.from_user.id
       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       if user_status[0] == 'Admin':
          await message.reply(f"üí∞ | –í—ã –æ–±–Ω—É–ª–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET bank = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET rating = {0} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Owner':
          await message.reply(f"üìñ | {user_name} –í—ã –æ–±–Ω—É–ª–∏–ª–∏ –∏–≥—Ä–æ–∫–∞: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> {rwin}", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET bank = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET rating = {0} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Player':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!", parse_mode='html')

    if message.text.lower() in ["–∑–∞–±–∞–Ω–∏—Ç—å", "–ó–∞–±–∞–Ω–∏—Ç—å"]:
       msg = message
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = reply_user_name[0]
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       reply_user_id = msg.reply_to_message.from_user.id
       user_id = msg.from_user.id
       user_status2 = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_status = "Blocked"
       if user_status2[0] == "Admin":
          await message.reply(f"üõë | –í—ã –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET bank = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET rating = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET user_status = \"{user_status}\" WHERE user_id = "{reply_user_id}"')
          connect.commit()
       if user_status2[0] == "Owner":
          await message.reply(f"üõë | –í—ã –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET bank = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET rating = {0} WHERE user_id = "{reply_user_id}"')
          cursor.execute(f'UPDATE users SET user_status = \"{user_status}\" WHERE user_id = "{reply_user_id}"')
          connect.commit()
       if user_status2[0] == 'Player':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!", parse_mode='html')

    if message.text.lower() in ["–ø–æ–≤—ã—Å–∏—Ç—å", "–ü–æ–≤—ã—Å–∏—Ç—å"]:
       msg = message
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = reply_user_name[0]
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       reply_user_id = msg.reply_to_message.from_user.id
       user_id = msg.from_user.id
       user_status2 = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_status = "Admin"
       if user_status2[0] == "Owner":
          await message.reply(f"üõë | –í—ã –≤—ã–¥–∞–ª–∏ –∞–¥–º–∏–Ω–∞ –±–æ—Ç–∞ –∏–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>", parse_mode='html')
          cursor.execute(f'UPDATE users SET user_status = \"{user_status}\" WHERE user_id = "{reply_user_id}"')
          connect.commit()
       if user_status2[0] == 'Player':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞!", parse_mode='html')
       if user_status2[0] == 'Admin':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞!", parse_mode='html')
    
    if message.text.lower() in ["—Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å", "–†–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å"]:
       msg = message
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = reply_user_name[0]
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       reply_user_id = msg.reply_to_message.from_user.id
       user_id = msg.from_user.id
       user_status2 = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_status = "Player"
       if user_status2[0] == "Owner":
          await message.reply(f"üõë | –í—ã –∑–∞–±—Ä–∞–ª–∏ –∞–¥–º–∏–Ω–∞ –±–æ—Ç–∞ —É –∏–≥—Ä–æ–∫–∞: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>", parse_mode='html')
          cursor.execute(f'UPDATE users SET user_status = \"{user_status}\" WHERE user_id = "{reply_user_id}"')
          connect.commit()
       if user_status2[0] == 'Player':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞!", parse_mode='html')
       if user_status2[0] == 'Admin':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞!", parse_mode='html')
       
    if message.text.lower() in ["—Ä–∞–∑–±–∞–Ω–∏—Ç—å", "–†–∞–∑–±–∞–Ω–∏—Ç—å"]:
       msg = message
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = reply_user_name[0]
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       reply_user_id = msg.reply_to_message.from_user.id
       user_id = msg.from_user.id
       user_status = "Player"
       user_status2 = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       if user_status2[0] == "Admin":
          await message.reply(f"‚úÖ | –í—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>", parse_mode='html')
          cursor.execute(f'UPDATE users SET user_status = \"{user_status}\" WHERE user_id = "{reply_user_id}"')
          connect.commit()
       if user_status2[0] == "Owner":
          await message.reply(f"‚úÖ | –í—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>", parse_mode='html')
          cursor.execute(f'UPDATE users SET user_status = \"{user_status}\" WHERE user_id = "{reply_user_id}"')
          connect.commit()
       if user_status2[0] == 'Player':
          await message.reply(f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!", parse_mode='html')
###########################################–ë–ê–ù–ö###########################################
    # bank
    if message.text.startswith("–±–∞–Ω–∫ –ø–æ–ª–æ–∂–∏—Ç—å"):
       msg = message
       chat_id = message.chat.id
       user_id = msg.from_user.id
       name = msg.from_user.last_name 
       user_name = message.from_user.get_mention(as_html=True)

       bank_p = int(msg.text.split()[2])
       print(f"{name} –ø–æ–ª–æ–∂–∏–ª –≤ –±–∞–Ω–∫: {bank_p}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       bank = cursor.execute("SELECT bank from users where user_id = ?", (message.from_user.id,)).fetchone()
       bank = round(int(bank[0]))
       bank2 = '{:,}'.format(bank_p)
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       if bank_p > 0:
          if balance >= bank_p:  
             await bot.send_message(message.chat.id, f'{user_name}, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –±–∞–Ω–∫ {bank2}‚Ç¨ {rwin}', parse_mode='html')
             cursor.execute(f'UPDATE users SET balance = {balance - bank_p} WHERE user_id = "{user_id}"') 
             cursor.execute(f'UPDATE users SET bank = {bank + bank_p} WHERE user_id = "{user_id}"') 
             connect.commit()    
   
          elif int(balance) < int(bank_p):
             await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')

       if bank_p <= 0:
          await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–ª—å–∑—è –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')  

    if message.text.startswith("–±–∞–Ω–∫ —Å–Ω—è—Ç—å"):
       msg = message
       chat_id = message.chat.id
       user_id = msg.from_user.id
       name = msg.from_user.last_name 
       user_name = message.from_user.get_mention(as_html=True)

       bank_s = int(msg.text.split()[2])
       print(f"{name} —Å–Ω—è–ª —Å –±–∞–Ω–∫–∞: {bank_s}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       bank = cursor.execute("SELECT bank from users where user_id = ?", (message.from_user.id,)).fetchone()
       bank = round(int(bank[0]))
       bank2 = '{:,}'.format(bank_s)
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)

       if bank_s > 0:
          if bank >= bank_s:  
             await bot.send_message(message.chat.id, f'{user_name}, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ {bank2}‚Ç¨ {rwin}', parse_mode='html')
             cursor.execute(f'UPDATE users SET bank = {bank - bank_s} WHERE user_id = "{user_id}"') 
             cursor.execute(f'UPDATE users SET balance = {balance + bank_s} WHERE user_id = "{user_id}"') 
             connect.commit()    
   
          elif int(bank) < int(bank_s):
             await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É! {rloser}', parse_mode='html')

       if bank_s <= 0:
          await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–ª—å–∑—è —Å–Ω—è—Ç—å —Å –±–∞–Ω–∫–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')  

    if message.text.startswith("+–±–∞–Ω–∫"):
       msg = message
       user_id = msg.from_user.id
       chat_id = message.chat.id
       name = msg.from_user.last_name 
       user_name = message.from_user.get_mention(as_html=True)

       bank_p = int(msg.text.split()[1])
       print(f"{name} –ø–æ–ª–æ–∂–∏–ª –≤ –±–∞–Ω–∫: {bank_p}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       bank = cursor.execute("SELECT bank from users where user_id = ?", (message.from_user.id,)).fetchone()
       bank = round(int(bank[0]))
       bank2 = '{:,}'.format(bank_p)
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       if bank_p > 0:
          if balance >= bank_p:  
             await bot.send_message(message.chat.id, f'{user_name}, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –±–∞–Ω–∫ {bank2}‚Ç¨ {rwin}', parse_mode='html')
             cursor.execute(f'UPDATE users SET balance = {balance - bank_p} WHERE user_id = "{user_id}"') 
             cursor.execute(f'UPDATE users SET bank = {bank + bank_p} WHERE user_id = "{user_id}"') 
             connect.commit()    
   
          elif int(balance) < int(bank_p):
             await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')

       if bank_p <= 0:
          await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–ª—å–∑—è –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')  

    if message.text.startswith("-–±–∞–Ω–∫"):
       msg = message
       user_id = msg.from_user.id
       name = msg.from_user.last_name 
       chat_id = message.chat.id
       user_name = message.from_user.get_mention(as_html=True)

       bank_s = int(msg.text.split()[1])
       print(f"{name} —Å–Ω—è–ª —Å –±–∞–Ω–∫–∞: {bank_s}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       bank = cursor.execute("SELECT bank from users where user_id = ?", (message.from_user.id,)).fetchone()
       bank = round(int(bank[0]))
       bank2 = '{:,}'.format(bank_s)
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       if bank_s > 0:
          if bank >= bank_s:  
             await bot.send_message(message.chat.id, f'{user_name}, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ {bank2}‚Ç¨ {rwin}', parse_mode='html')
             cursor.execute(f'UPDATE users SET bank = {bank - bank_s} WHERE user_id = "{user_id}"') 
             cursor.execute(f'UPDATE users SET balance = {balance + bank_s} WHERE user_id = "{user_id}"') 
             connect.commit()    
   
          elif int(bank) < int(bank_s):
             await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É! {rloser}', parse_mode='html')

       if bank_s <= 0:
          await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–ª—å–∑—è —Å–Ω—è—Ç—å —Å –±–∞–Ω–∫–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')  

###########################################–ê–î–ú–ò–ù –ö–û–ú–ê–ù–î–´###########################################
    if message.text.startswith("–≤—ã–¥–∞—Ç—å"):
       msg = message
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       perevod = int(msg.text.split()[1])
       reply_user_id = msg.reply_to_message.from_user.id
       perevod2 = '{:,}'.format(perevod)
       user_id = msg.from_user.id
       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])
       if user_status[0] == 'Helper_Admin':
          await message.reply(f'üë® | –ò–≥—Ä–æ–∫: {user_name}\n‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –í—ã–¥–∞—á–∞ –¥–µ–Ω–µ–≥\nüíà | –°—É–º–º–∞: {perevod2}‚Ç¨\nüë® | –ò–≥—Ä–æ–∫—É: {reply_user_name}', parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Player':
          await message.reply(f'‚ÑπÔ∏è | {user_name}, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!', parse_mode='html')  

    if message.text.startswith("–í—ã–¥–∞—Ç—å"):
       msg = message
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       perevod = int(msg.text.split()[1])
       reply_user_id = msg.reply_to_message.from_user.id
       perevod2 = '{:,}'.format(perevod)
       user_id = msg.from_user.id
       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])
       if user_status[0] == 'Helper_Admin':
          await message.reply(f'üë® | –ò–≥—Ä–æ–∫: {user_name}\n‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –í—ã–¥–∞—á–∞ –¥–µ–Ω–µ–≥\nüíà | –°—É–º–º–∞: {perevod2}‚Ç¨\nüë® | –ò–≥—Ä–æ–∫—É: {reply_user_name}', parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
          connect.commit() 
       if user_status[0] == 'Player':
          await message.reply(f'‚ÑπÔ∏è | {user_name}, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!', parse_mode='html')       
       
# nick
    if message.text.lower() in ["–Ω–∏–∫", "–ù–∏–∫"]:
       msg = message 
       chat_id = message.chat.id
       user_name = msg.from_user.full_name
       await bot.send_message(message.chat.id, f"ü§ù –í–∞—à –Ω–∏–∫ - {user_name}")    

###################################### –ö–ò–¢-–ë–û–ù–£–°–´ ##################################################
    if message.text.lower() == '–ø–æ–ª—É—á–∏—Ç—å –∫–∏—Ç –±–æ–Ω—É—Å':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id 

       user_status = cursor.execute('SELECT user_status from users where user_id = ?', (message.from_user.id,)).fetchone()
       user_status = user_status[0]

       balance = cursor.execute('SELECT balance from users where user_id = ?', (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       rating = cursor.execute('SELECT rating from users where user_id = ?', (message.from_user.id,)).fetchone()
       rating = int(rating[0])
       period = 43200 #43200 s = 12h
       get = cursor.execute("SELECT time_kit FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
       last_stavka = f"{int(get[0])}"
       stavkatime = time.time() - float(last_stavka)
       if stavkatime > period:
          if user_status == 'Player':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 1,000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 5,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 5000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 5000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return         
          if user_status == 'vip':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 50.000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 15,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 50000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 500} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE mine SET gold = {gold + 15} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET ethereum = {ethereum + 0} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return
          if user_status == 'apper':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 100,000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 50,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 100000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 50000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return
          if user_status == 'donater':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 500,000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 500,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 500000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 500000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return

          if user_status == 'donater2':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 1,000.000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 5,000,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 1000000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 5000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∫–∏—Ç-–±–æ–Ω—É—Å", parse_mode='html') 
             return   
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–ª—É—á–∞—Ç—å –∫–∏—Ç-–±–æ–Ω—É—Å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 12—á", parse_mode='html')   
    if message.text.lower() == '–ü–æ–ª—É—á–∏—Ç—å –∫–∏—Ç –±–æ–Ω—É—Å':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id 

       user_status = cursor.execute('SELECT user_status from users where user_id = ?', (message.from_user.id,)).fetchone()
       user_status = user_status[0]

       balance = cursor.execute('SELECT balance from users where user_id = ?', (message.from_user.id,)).fetchone()
       balance = int(balance[0])

       rating = cursor.execute('SELECT rating from users where user_id = ?', (message.from_user.id,)).fetchone()
       rating = int(rating[0])
       period = 43200 #43200 s = 12h
       get = cursor.execute("SELECT time_kit FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
       last_stavka = f"{int(get[0])}"
       stavkatime = time.time() - float(last_stavka)
       if stavkatime > period:
          if user_status == 'Player':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 1,000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 5,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 5000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 5000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return         
          if user_status == 'vip':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 50.000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 15,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 50000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 500} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE mine SET gold = {gold + 15} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET ethereum = {ethereum + 0} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return
          if user_status == 'apper':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 100,000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 50,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 100000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 50000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return
          if user_status == 'donater':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 500,000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 500,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 500000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 500000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return

          if user_status == 'donater2':
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ 1,000.000,000,000,000,000$", parse_mode='html')
             time.sleep(0.2)
             await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ üíé 5,000,000 —à—Ç.", parse_mode='html')
             time.sleep(0.2)
             cursor.execute(f'UPDATE users SET balance = {balance + 1000000000000000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE users SET rating = {rating + 5000000} WHERE user_id = {user_id}')
             cursor.execute(f'UPDATE bot_time SET time_kit = {time.time()} WHERE user_id = {user_id}')
             connect.commit()
             return
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∫–∏—Ç-–±–æ–Ω—É—Å", parse_mode='html') 
             return   
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–ª—É—á–∞—Ç—å –∫–∏—Ç-–±–æ–Ω—É—Å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 12—á", parse_mode='html')   
                        
    if message.text.lower() in ['–∫–∏—Ç-–±–æ–Ω—É—Å—ã', '–∫–∏—Ç –±–æ–Ω—É—Å—ã', '–∫–∏—Ç –±–æ–Ω—É—Å', '–∫–∏—Ç-–±–æ–Ω—É—Å']:
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id 

       await bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∫–∏—Ç-–±–æ–Ω—É—Å–∞—Ö üéÅ

üéÄ | –ò–≥—Ä–æ–∫:
      üí∞ | 1,000,000,000,000,000‚Ç¨
      üíé | 5.000 —à—Ç.

üëë | VIP+
      üí∞ | 50,000,000,000,000,000‚Ç¨
      üíé | 15,000 —à—Ç.

üéÅ | –ú–µ–≥–∞–ê–ø–ø–µ—Ä:
      üí∞ | 100.000,000,000,000,000‚Ç¨
      üíé |  100,000 —à—Ç.
      
üíµ | –î–æ–Ω–∞—Ç–µ—Ä:
      üí∞ | 500.000,000,000,000,000$
      üíé |  500,000 —à—Ç.
      
üíé | –ú–µ–≥–∞–î–æ–Ω–∞—Ç–µ—Ä:
      üí∞ | 1.000.000,000,000,000,000‚Ç¨
      üíé |  5,000,000 —à—Ç.

‚ÑπÔ∏è –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–∏—Ç-–±–æ–Ω—É—Å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–ü–æ–ª—É—á–∏—Ç—å –∫–∏—Ç-–±–æ–Ω—É—Å\" 
‚ÑπÔ∏è –ö–∏—Ç-–±–æ–Ω—É—Å –ø–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 12—á      
       """, parse_mode='html')

###########################################–î–û–ù–ê–¢###########################################
    if message.text.lower() in ["–¥–æ–Ω–∞—Ç", "–î–æ–Ω–∞—Ç"]:
       msg = message 
       chat_id = message.chat.id
       user_name = msg.from_user.full_name
       await bot.send_message(message.chat.id, f'üßë‚Äç‚öñ | {user_name}, –í—ã –æ—Ç–∫—Ä—ã–ª–∏ –ø–∞–Ω–µ–ª—å –¥–æ–Ω–∞—Ç\n1‚É£ | VIP+üëë | –ú–æ–∂–Ω–æ –≤—ã–∏–≥—Ä–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ‚ùó\n2‚É£ | –ú–µ–≥–∞–ê–ø–ø–µ—ÄüéÅ | –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –µ—Å–ª–∏ –≤—ã –±—ã–ª–∏ 15 —Ä–∞–∑ —Ç–æ–ø 1 –ø–æ –±–∞–ª–∞–Ω—Å—É | –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ 15 —Ñ–æ—Ç–æ –≥–¥–µ –≤—ã —Ç–æ–ø 1 | \n3‚É£ | –î–æ–Ω–∞—Ç–µ—Äüíµ | –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –µ—Å–ª–∏ –≤—ã –∑–∞–¥–æ–Ω–∞—Ç–∏–ª–∏ –±–æ–ª—å—à–µ 50—Ä | –ü–æ–ª—É—á–∏—Ç–µ –±–æ–ª—å—à–µ —á–µ–º (–≤–∏–ø, –∞–ø–ø–µ—Ä,)+ –°–º–∞–π–ª–∏–∫ –≤ –ø—Ä–∏—Ñ–∏–∫—Å —á—Ç–æ –≤—ã –¥–æ–Ω–∞—Ç–µ—Ä |\n4‚É£ | –ú–µ–≥–∞–î–æ–Ω–∞—Ç–µ—Äüíé | –ï—Å–ª–∏ –≤—ã –∑–∞–¥–æ–Ω–∞—Ç–∏–ª–∏ –±–æ–ª—å—à–µ 250—Ä –≤—ã —Å—Ç–∞–Ω–µ—Ç–µ –∞–¥–º–∏–Ω–∞–º(–≥—Ä—É–ø–ø—ã) + —É –≤–∞—Å –≤—Å–µ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –î–æ–Ω–∞—Ç–µ—Ä–∞üíµ, –ú–µ–≥–∞–ê–ø–ø–µ—Ä–∞üéÅ, –∏ VIP+üëë. +–∏–Ω–æ–≥–¥–∞ –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–∏–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –∞–¥–º–∏–Ω(–±–æ—Ç–∞) —Å –ø—Ä–∏–≤–∏–ª–µ–≥—Ä–∏ –ú–µ–≥–∞–î–æ–Ω–∞—Ç–µ—Ä –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å—ã| \n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\nüí∂ | –ö—É—Ä—Å –ò–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã | –∫—É—Ä—Å –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã –º–µ–Ω—è–µ—Ç—Å—è —Ç–∞–∫ —á—Ç–æ –ø–∏—à–∏—Ç–µ | @XennuKinDer –∏–ª–∏ –∂–¥–∏—Ç–µ  –ø–æ–∫–∞ –±—É–¥–µ—Ç –ø–æ—Å—Ç –∏ –∫—É—Ä—Å–æ–º\n‚ùì| –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É \n‚ùï| –ï—Å—Ç—å –∏–¥–µ—è —á—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É', parse_mode='html')
              
########################################################–ë–û–ù–£–°–´##########################################################
    if message.text.lower() in ['–†–∞–±–æ—Ç–∞—Ç—å', "—Ä–∞–±–æ—Ç–∞—Ç—å"]:
        msg = message
        user_name = message.from_user.get_mention(as_html=True)
        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))

        win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
        rwin = random.choice(win)
        loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
        rloser = random.choice(loser)

        user_id = msg.from_user.id
        user_status = cursor.execute("SELECT user_status from users where user_id = ?",
                                     (message.from_user.id,)).fetchone()

        period = 86400
        get = cursor.execute("SELECT last_stavka FROM bot WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        if stavkatime > period:
            if user_status[0] == 'Owner':
                await message.reply(f'{user_name} üõ† –í—ã –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏ —à–∞—Ö—Ç–µ—Ä–æ–º –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: 1.000.000.000.000‚Ç¨{rwin}',
                                    parse_mode='html')
                cursor.execute(f'UPDATE users SET balance = {balance + 1000000000000} WHERE user_id = "{user_id}"')
                connect.commit()
            if user_status[0] == 'Zam':
                await message.reply(f'{user_name}üî¶ | –¢—ã –ø–æ—Ä–∞–±–æ—Ç–∞–ª(–∞) –æ—Ö—Ä–∞–Ω–Ω–∏–∫–æ–º –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª(–∞): 100.000.000.000.000‚Ç¨{rwin}',
                                    parse_mode='html')
                cursor.execute(f'UPDATE users SET balance = {balance + 100000000000000} WHERE user_id = "{user_id}"')
                connect.commit()

            if user_status[0] == 'Admin':
                await message.reply(f'{user_name} üèé –í—ã –ø–æ—á–∏–Ω–∏–ª–∏ –º–∞—à–∏–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–∞ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: 500.000.000.000.000‚Ç¨ {rwin}',
                                    parse_mode='html')
                cursor.execute(f'UPDATE users SET balance = {balance + 500000000000000} WHERE user_id = "{user_id}"')
                connect.commit()
            if user_status[0] == 'Player':
                await message.reply(f'üõ¢ {user_name}  –í—ã –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–∞ –°–¢–û –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: 500.0000.000‚Ç¨{rwin}',
                                    parse_mode='html')
                cursor.execute(f'UPDATE users SET balance = {balance + 500000000} WHERE user_id = "{user_id}"')
                connect.commit()
        else:
            await bot.send_message(message.chat.id,f'üî¶ {user_name} –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ —Ç–∞–∫ –∫–∞–∫ –≤—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ —Å–≤–æ–π –ª–∏–º–∏—Ç! {rloser}', parse_mode='html')
            ###########################################–°–ü–ò–ù#############################################
    if message.text.startswith("—Å–ø–∏–Ω"):
        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])
        balance2 = '{:,}'.format(balance)
        msg = message
        user_id = msg.from_user.id
        chat_id = message.chat.id
        rx = random.randint(0, 105)
        msg = message
        name1 = message.from_user.get_mention(as_html=True)
        name = msg.from_user.last_name
        summ = float(msg.text.split()[1])
        print(f"{name} –ø–æ—Å—Ç–∞–≤–∏–ª –≤ —Å–ø–∏–Ω: {summ} –∏ –≤—ã–∏–≥—Ä–∞–ª/–ø—Ä–æ–∏–≥—Ä–∞–ª: {rx}")
        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bot WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        loz = ['üí©|üëë|üëë', 'üí©|üñï|üëë', 'üíé|üñï|üëë', 'üíé|üí£|üçå', 'üëë|üçå|üñï', 'üíé|üçì|üí£']
        win = ['üíé|üçì|üçå', 'üëë|üíé|üçì', 'üçì|üëë|üíé', 'üíé|üçì|üçå', 'üíé|üçì|üçì', 'üçå|üçå|üíé']
        Twin = ['üíé|üíé|üíé', 'üçì|üçì|üçì', 'üëë|üëë|üëë', 'üçå|üçå|üçå']
        smtwin = ['ü§Ø', 'ü§©', 'üòµ', 'üôÄ']
        smwin = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
        loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
        rsmtwin = random.choice(smtwin)
        rsmtwin2 = random.choice(smtwin)
        rtwin = random.choice(Twin)
        rloser = random.choice(loser)
        rloser2 = random.choice(loser)
        rwin = random.choice(win)
        rloz = random.choice(loz)
        rsmwin = random.choice(smwin)
        rsmwin2 = random.choice(smwin)
        if balance >= 999999999999999999999999:
            balance = 999999999999999999999999
            cursor.execute(f'UPDATE users SET balance = {999999999999999999999999}  WHERE user_id = ?', (user_id,))
            connect.commit()
            balance2 = '{:,}'.format(balance)
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if int(rx) in range(80, 100):
                        c = Decimal(summ * 2)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id,
                                               f'{name1}, –≤–æ—Ç –≤–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n{rwin} - –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨{rsmwin}\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n–ü–æ–∑—Ä–∞–≤–ª—è—é –≤–∞—Å!{rsmwin2}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 2)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return

        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if int(rx) in range(0, 70):
                        c = Decimal(summ * 0)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id,
                                               f'{name1}, –≤–æ—Ç –≤–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n{rloz} - –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨{rloser}\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n–ü—Ä–∏–π–º–∏—Ç–µ –º–æ–∏ —Å–æ–±–æ–ª–µ–∑–Ω–æ–≤–∞–Ω–∏—è!{rloser2}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 0)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if int(rx) in range(101, 103):
                        c = Decimal(summ * 25)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id,
                                               f'{name1}, –≤–æ—Ç –≤–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n{rtwin} - –î–ñ–ï–ö–ü–û–¢, –í–´ –í–´–ò–ì–†–ê–õ–ò {c2}‚Ç¨{rsmtwin}\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n–ü–û–ó–î–†–ê–í–õ–Ø–Æ –£ –í–ê–° –î–ñ–ï–ö–ü–û–¢!{rsmtwin2}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 25)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                elif summ <= 1:
                    await bot.send_message(chat_id, f'{name1}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}',
                                           parse_mode='html')
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'{name1}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'{name1}, –∏–∑–≤–∏–Ω–∏. –Ω–æ –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 5Ô∏è‚É£ —Å–µ–∫—É–Ω–¥. {rloser}',
                                   parse_mode='html')
            return
    if message.text.startswith("–°–ø–∏–Ω"):
        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])
        balance2 = '{:,}'.format(balance)
        msg = message
        user_id = msg.from_user.id
        chat_id = message.chat.id
        rx = random.randint(0, 105)
        msg = message
        name1 = message.from_user.get_mention(as_html=True)
        name = msg.from_user.last_name
        summ = float(msg.text.split()[1])
        print(f"{name} –ø–æ—Å—Ç–∞–≤–∏–ª –≤ —Å–ø–∏–Ω: {summ} –∏ –≤—ã–∏–≥—Ä–∞–ª/–ø—Ä–æ–∏–≥—Ä–∞–ª: {rx}")
        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bot WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        loz = ['üí©|üëë|üëë', 'üí©|üñï|üëë', 'üíé|üñï|üëë', 'üíé|üí£|üçå', 'üëë|üçå|üñï', 'üíé|üçì|üí£']
        win = ['üíé|üçì|üçå', 'üëë|üíé|üçì', 'üçì|üëë|üíé', 'üíé|üçì|üçå', 'üíé|üçì|üçì', 'üçå|üçå|üíé']
        Twin = ['üíé|üíé|üíé', 'üçì|üçì|üçì', 'üëë|üëë|üëë', 'üçå|üçå|üçå']
        smtwin = ['ü§Ø', 'ü§©', 'üòµ', 'üôÄ']
        smwin = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
        loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
        rsmtwin = random.choice(smtwin)
        rsmtwin2 = random.choice(smtwin)
        rtwin = random.choice(Twin)
        rloser = random.choice(loser)
        rloser2 = random.choice(loser)
        rwin = random.choice(win)
        rloz = random.choice(loz)
        rsmwin = random.choice(smwin)
        rsmwin2 = random.choice(smwin)
        if balance >= 999999999999999999999999:
            balance = 999999999999999999999999
            cursor.execute(f'UPDATE users SET balance = {999999999999999999999999}  WHERE user_id = ?', (user_id,))
            connect.commit()
            balance2 = '{:,}'.format(balance)
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if int(rx) in range(80, 100):
                        c = Decimal(summ * 2)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id,
                                               f'{name1}, –≤–æ—Ç –≤–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n{rwin} - –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨{rsmwin}\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n–ü–æ–∑—Ä–∞–≤–ª—è—é –≤–∞—Å!{rsmwin2}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 2)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return

        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if int(rx) in range(0, 70):
                        c = Decimal(summ * 0)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id,
                                               f'{name1}, –≤–æ—Ç –≤–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n{rloz} - –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨{rloser}\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n–ü—Ä–∏–π–º–∏—Ç–µ –º–æ–∏ —Å–æ–±–æ–ª–µ–∑–Ω–æ–≤–∞–Ω–∏—è!{rloser2}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 0)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if int(rx) in range(101, 103):
                        c = Decimal(summ * 25)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id,
                                               f'{name1}, –≤–æ—Ç –≤–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n{rtwin} - –î–ñ–ï–ö–ü–û–¢, –í–´ –í–´–ò–ì–†–ê–õ–ò {c2}‚Ç¨{rsmtwin}\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n–ü–û–ó–î–†–ê–í–õ–Ø–Æ –£ –í–ê–° –î–ñ–ï–ö–ü–û–¢!{rsmtwin2}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 25)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                elif summ <= 1:
                    await bot.send_message(chat_id, f'{name1}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}',
                                           parse_mode='html')
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'{name1}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'{name1}, –∏–∑–≤–∏–Ω–∏. –Ω–æ –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 5Ô∏è‚É£ —Å–µ–∫—É–Ω–¥. {rloser}',
                                   parse_mode='html')
            return
# –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏
    if message.text.startswith('–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫'):
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       chat_id = message.chat.id
       user_id = message.from_user.id
       name = " ".join(message.text.split()[2:])

       if len(name) <= 20:
          await bot.send_message(message.chat.id, f"‚úèÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a> , –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ —Å–≤–æ–µ –∏–º—è –Ω–∞: {name}!", parse_mode='html')
          cursor.execute(f'UPDATE users SET user_name = \"{name}\" WHERE user_id = "{user_id}"')
          print(f"{user_name} —Å–º–µ–Ω–∏–ª –Ω–∏–∫ –Ω–∞ {name}")
       else: 
          await bot.send_message(message.chat.id, f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a> , –≤–∞—à –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!", parse_mode='html')
    if message.text.startswith('—Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫'):
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       chat_id = message.chat.id
       user_id = message.from_user.id
       name = " ".join(message.text.split()[2:])
       if len(name) <= 20:
          await bot.send_message(message.chat.id, f"‚úèÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a> , –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ —Å–≤–æ–µ –∏–º—è –Ω–∞: {name}!", parse_mode='html')
          cursor.execute(f'UPDATE users SET user_name = \"{name}\" WHERE user_id = "{user_id}"')
          print(f"{user_name} —Å–º–µ–Ω–∏–ª –Ω–∏–∫ –Ω–∞ {name}")
       else: 
          await bot.send_message(message.chat.id, f"‚ÑπÔ∏è | <a href='tg://user?id={user_id}'>{user_name}</a> , –≤–∞—à –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!", parse_mode='html')
 
    if message.text.startswith('c–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å'):
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_status = str(user_status[0])

       prefix = ' '.join(message.text.split()[2:])
       if len(prefix) <= 20:
          if user_status in ['donater2', 'Admin', 'Helper_Admin', 'Owner']:
             await bot.send_message(message.chat.id, f"üîí | –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å –Ω–∞ {prefix}")
             cursor.execute(f'UPDATE users SET pref = "{prefix}" WHERE user_id = {user_id}')
             connect.commit()
             return
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –º–µ–Ω—è—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ—Ç –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ \"–ú–µ–≥–∞–î–æ–Ω–∞—Ç–µ—Ä\"", parse_mode='html')
             return
       else:
          await bot.send_message(message.chat.id, f"üÜò | –ò–≥—Ä–æ–∫, –º–µ–Ω—è—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!", parse_mode='html')
          return

    if message.text.startswith('–°–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å'):
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_status = str(user_status[0])

       prefix = ' '.join(message.text.split()[2:])
       if len(prefix) <= 20:
          if user_status in ['donater2', 'Admin', 'Helper_Admin', 'Owner']:
             await bot.send_message(message.chat.id, f"üîí | –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —Å–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å –Ω–∞ {prefix}")
             cursor.execute(f'UPDATE users SET pref = "{prefix}" WHERE user_id = {user_id}')
             connect.commit()
             return
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –º–µ–Ω—è—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ—Ç –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ \"–ú–µ–≥–∞–î–æ–Ω–∞—Ç–µ—Ä\"", parse_mode='html')
             return
       else:
          await bot.send_message(message.chat.id, f"üÜò | –ò–≥—Ä–æ–∫, –º–µ–Ω—è—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤!", parse_mode='html')
          return    
#–û–≥—Ä–∞–±–∏—Ç—å –±–∞–Ω–∫
    if message.text.lower() == '–æ–≥—Ä–∞–±–∏—Ç—å –±–∞–Ω–∫':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])
       
       x = random.randint(1,3)
       period = 86400 #86400 s 24h
       get = cursor.execute("SELECT stavka_bank FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
       last_stavka = int(get[0])
       stavkatime = time.time() - float(last_stavka)
       rx = random.randint(1000000,25000000)
       rx2 = '{:,}'.format(rx)
       if stavkatime > period:
          if int(x) in range(2,3):
             await bot.send_message(message.chat.id, f"üè¶ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∏ –±–∞–Ω–∫ –Ω–∞ {rx2}‚Ç¨‚úÖ", parse_mode='html')
             cursor.execute(f'UPDATE users SET balance = {balance + rx} WHERE user_id ="{user_id}"')
             cursor.execute(f'UPDATE bot_time SET stavka_bank = {time.time()} WHERE user_id = "{user_id}"')
             connect.commit()
          else:
             await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –±–∞–Ω–∫", parse_mode='html')
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –æ–≥—Ä–∞–±–∏—Ç—å –±–∞–Ω–∫ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 24—á‚è≥", parse_mode='html')
# bonus 24h
    
    
    if message.text.lower() == '–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å':
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = user_name[0]
       user_id = message.from_user.id

       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])
       period = 86400 #86400 s = 24h
       get = cursor.execute("SELECT stavka_bonus FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
       last_stavka = int(get[0])
       stavkatime = time.time() - float(last_stavka)
       
       rx = random.randint(1000000000,250000000000)
       rx2 = '{:,}'.format(rx)

       if stavkatime > period:
          await bot.send_message(message.chat.id, f"üéÅ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –≤ —Å—É–º–º–µ {rx2}‚Ç¨ üíµ", parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance + rx}  WHERE user_id = "{user_id}"')
          cursor.execute(f'UPDATE bot_time SET stavka_bonus = {time.time()} WHERE user_id = "{user_id}"')
          connect.commit()
       else:
          await bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 24—á‚è≥", parse_mode='html')           
###########################################–ß–Å–¢–ù–û–ï\–ù–ï –ß–Å–¢–ù–û–ï#################################
    if message.text.startswith("–ù–µ—á—ë—Ç–Ω–æ–µ"):
        msg = message
        user_id = msg.from_user.id
        chat_id = message.chat.id

        win = ['üôÇ', 'üòã', 'üòÑ', 'üòÉ']
        loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
        rx = random.randint(0, 120)
        rwin = random.choice(win)
        rwin2 = random.choice(win)
        rloser = random.choice(loser)

        msg = message
        name1 = message.from_user.get_mention(as_html=True)
        name = msg.from_user.last_name
        summ = float(msg.text.split()[1])
        kyb = ['üé≤1', 'üé≤2', 'üé≤3', 'üé≤4', 'üé≤5', 'üé≤6']
        rkyb = random.choice(kyb)
        print(f"{name} –ø–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –Ω–µ—á—ë—Ç–Ω–æ–µ: {summ} –∏ –≤—ã–ø–∞–ª–æ: {rkyb}")
        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bot WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if rkyb in ['üé≤2', 'üé≤4', 'üé≤6']:
                        c = Decimal(summ)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1} , –≤–∞–º –≤—ã–ø–∞–ª–æ: {rkyb}\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ {rloser}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {balance - summ} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                    if rkyb in ['üé≤1', 'üé≤3', 'üé≤5']:
                        c = Decimal(summ * 2)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1} , –≤–∞–º –≤—ã–ø–∞–ª–æ: {rkyb}\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ {rwin}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 2)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                elif summ <= 1:
                    await bot.send_message(chat_id, f'{name1}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}',
                                           parse_mode='html')
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'{name1}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'{name1}, –∏–∑–≤–∏–Ω–∏. –Ω–æ –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 5Ô∏è‚É£ —Å–µ–∫—É–Ω–¥. {rloser}',
                                   parse_mode='html')
            return
    if message.text.startswith("–Ω–µ—á—ë—Ç–Ω–æ–µ"):
        msg = message
        user_id = msg.from_user.id
        chat_id = message.chat.id

        win = ['üôÇ', 'üòã', 'üòÑ', 'üòÉ']
        loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
        rx = random.randint(0, 120)
        rwin = random.choice(win)
        rwin2 = random.choice(win)
        rloser = random.choice(loser)

        msg = message
        name1 = message.from_user.get_mention(as_html=True)
        name = msg.from_user.last_name
        summ = float(msg.text.split()[1])
        print(f"{name} –ø–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –Ω–µ—á—ë—Ç–Ω–æ–µ: {summ} –∏ –≤—ã–∏–≥—Ä–∞–ª/–ø—Ä–æ–∏–≥—Ä–∞–ª: {rx}")
        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        period = 5
        kyb = ['üé≤1', 'üé≤2', 'üé≤3', 'üé≤4', 'üé≤5', 'üé≤6']
        rkyb = random.choice(kyb)
        get = cursor.execute("SELECT last_stavka FROM bot WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if rkyb in ['üé≤2', 'üé≤4', 'üé≤6']:
                        c = Decimal(summ)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1} , –≤–∞–º –≤—ã–ø–∞–ª–æ: {rkyb}\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ {rloser}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {balance - summ} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                    if rkyb in ['üé≤1', 'üé≤3', 'üé≤5']:
                        c = Decimal(summ * 2)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1} , –≤–∞–º –≤—ã–ø–∞–ª–æ: {rkyb}\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ {rwin}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 2)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                elif summ <= 1:
                    await bot.send_message(chat_id, f'{name1}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}',
                                           parse_mode='html')
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'{name1}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'{name1}, –∏–∑–≤–∏–Ω–∏. –Ω–æ –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 5Ô∏è‚É£ —Å–µ–∫—É–Ω–¥. {rloser}',
                                   parse_mode='html')
            return
    if message.text.startswith("—á—ë—Ç–Ω–æ–µ"):
        msg = message
        user_id = msg.from_user.id
        chat_id = message.chat.id

        win = ['üôÇ', 'üòã', 'üòÑ', 'üòÉ']
        loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
        rx = random.randint(0, 120)
        rwin = random.choice(win)
        rwin2 = random.choice(win)
        rloser = random.choice(loser)

        msg = message
        name1 = message.from_user.get_mention(as_html=True)
        name = msg.from_user.last_name
        summ = float(msg.text.split()[1])
        print(f"{name} –ø–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –ß—ë—Ç–Ω–æ–µ: {summ} –∏ –≤—ã–∏–≥—Ä–∞–ª/–ø—Ä–æ–∏–≥—Ä–∞–ª: {rx}")
        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        period = 5
        kyb = ['üé≤1', 'üé≤2', 'üé≤3', 'üé≤4', 'üé≤5', 'üé≤6']
        rkyb = random.choice(kyb)
        get = cursor.execute("SELECT last_stavka FROM bot WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if rkyb in ['üé≤2', 'üé≤4', 'üé≤6']:
                        c = Decimal(summ * 2)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1} , –≤–∞–º –≤—ã–ø–∞–ª–æ: {rkyb}\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ {rwin}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 2)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                    if rkyb in ['üé≤1', 'üé≤3', 'üé≤5']:
                        c = Decimal(summ)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1} , –≤–∞–º –≤—ã–ø–∞–ª–æ: {rkyb}\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ {rloser}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {balance - summ} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                elif summ <= 1:
                    await bot.send_message(chat_id, f'{name1}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}',
                                           parse_mode='html')
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'{name1}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'{name1}, –∏–∑–≤–∏–Ω–∏. –Ω–æ –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 5Ô∏è‚É£ —Å–µ–∫—É–Ω–¥. {rloser}',
                                   parse_mode='html')
            return
    if message.text.startswith("–ß—ë—Ç–Ω–æ–µ"):
        msg = message
        user_id = msg.from_user.id
        chat_id = message.chat.id

        win = ['üôÇ', 'üòã', 'üòÑ', 'üòÉ']
        loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
        rx = random.randint(0, 120)
        rwin = random.choice(win)
        rwin2 = random.choice(win)
        rloser = random.choice(loser)

        msg = message
        name1 = message.from_user.get_mention(as_html=True)
        name = msg.from_user.last_name
        summ = float(msg.text.split()[1])
        print(f"{name} –ø–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –ß—ë—Ç–Ω–æ–µ: {summ} –∏ –≤—ã–∏–≥—Ä–∞–ª/–ø—Ä–æ–∏–≥—Ä–∞–ª: {rx}")
        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        period = 5
        kyb = ['üé≤1', 'üé≤2', 'üé≤3', 'üé≤4', 'üé≤5', 'üé≤6']
        rkyb = random.choice(kyb)
        get = cursor.execute("SELECT last_stavka FROM bot WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if rkyb in ['üé≤2', 'üé≤4', 'üé≤6']:
                        c = Decimal(summ * 2)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1} , –≤–∞–º –≤—ã–ø–∞–ª–æ: {rkyb}\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ {rwin}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {(balance - summ) + (summ * 2)} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                    if rkyb in ['üé≤1', 'üé≤3', 'üé≤5']:
                        c = Decimal(summ)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1} , –≤–∞–º –≤—ã–ø–∞–ª–æ: {rkyb}\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ {rloser}',
                                               parse_mode='html')
                        cursor.execute(
                            f'UPDATE users SET balance = {balance - summ} WHERE user_id = "{user_id}"')
                        cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()
                        return
                elif summ <= 1:
                    await bot.send_message(chat_id, f'{name1}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}',
                                           parse_mode='html')
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'{name1}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'{name1}, –∏–∑–≤–∏–Ω–∏. –Ω–æ –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 5Ô∏è‚É£ —Å–µ–∫—É–Ω–¥. {rloser}',
                                   parse_mode='html')
            return                   
###########################################–ö–ê–ó–ò–ù–û###########################################
    if message.text.startswith("–ö–∞–∑–∏–Ω–æ"):
       msg = message
       user_id = msg.from_user.id
       chat_id = message.chat.id

       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rx = random.randint(0,110)
       rwin = random.choice(win)
       rloser = random.choice(loser)

       msg = message
       name1 = message.from_user.get_mention(as_html=True)
       name = msg.from_user.last_name 
       summ = float(msg.text.split()[1])
       print(f"{name} –ø–æ—Å—Ç–∞–≤–∏–ª –≤ –∫–∞–∑–∏–Ω–æ: {summ} –∏ –≤—ã–∏–≥—Ä–∞–ª/–ø—Ä–æ–∏–≥—Ä–∞–ª: {rx}")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       period = 5
       get = cursor.execute("SELECT last_stavka FROM bot WHERE chat_id = ?", (message.chat.id,)).fetchone()
       last_stavka = f"{int(get[0])}"
       stavkatime = time.time() - float(last_stavka)
       if stavkatime > period:
          if balance >= summ:
             if summ > 0:
                if int(rx) in range(0,9):
                   c = Decimal(summ)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x0) {rloser}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()   
                   return                           
                if int(rx) in range(10,29):
                   c = Decimal(summ - summ * 0.25)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x0.25) {rloser}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ * 0.75} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()  
                   return   
                if int(rx) in range(30,44):
                   c = Decimal(summ * 0.5)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x0.5) {rloser}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ * 0.5} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return  
                if int(rx) in range(45,54):
                   c = Decimal(summ - summ * 0.75)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x0.75) {rloser}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ * 0.25} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return  
                if int(rx) in range(55,64):
                   c = summ * 1
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å {c2}‚Ç¨ (x1) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()
                   return 
                if int(rx) in range(65,69):
                   c = Decimal(summ * 1.25)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x1.25) {rwin}', parse_mode='html')

                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 1.25)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()           
                   return 
                if int(rx) in range(70,74):
                   c = Decimal(summ * 1.5)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x1.5) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 1.5)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()  
                   return 
                if int(rx) in range(75,84):
                   c = Decimal(summ * 1.75)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x1.75) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 1.75)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()  
                   return 
                if int(rx) in range(85,95):
                   c = Decimal(summ * 2)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x2) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 2)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return 
                if int(rx) in range(100,108):
                   c = Decimal(summ * 3)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x3) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 3)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return 
                if int(rx) == 109:
                   c = Decimal(summ * 5)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x5) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 5)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                if int(rx) == 108:
                   c = Decimal(summ * 10)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x10) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 10)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return 
             elif summ <= 1:
                  await bot.send_message(chat_id, f'{name1}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')                                      
          elif int(balance) <= int(summ):
               await bot.send_message(chat_id, f'{name1}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')
       else:
        await bot.send_message(chat_id, f'{name1}, –ò–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5‚É£ —Å–µ–∫—É–Ω–¥ {rloser}', parse_mode='html')
        return

    if message.text.startswith("–∫–∞–∑–∏–Ω–æ"):
       msg = message
       user_id = msg.from_user.id
       chat_id = message.chat.id

       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rx = random.randint(0,110)
       rwin = random.choice(win)
       rloser = random.choice(loser)

       msg = message
       name1 = message.from_user.get_mention(as_html=True)
       name = msg.from_user.last_name 
       summ = float(msg.text.split()[1])
       print(f"{name} –ø–æ—Å—Ç–∞–≤–∏–ª –≤ –∫–∞–∑–∏–Ω–æ: {summ} –∏ –≤—ã–∏–≥—Ä–∞–ª/–ø—Ä–æ–∏–≥—Ä–∞–ª: {rx}")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       period = 5
       get = cursor.execute("SELECT last_stavka FROM bot WHERE chat_id = ?", (message.chat.id,)).fetchone()
       last_stavka = f"{int(get[0])}"
       stavkatime = time.time() - float(last_stavka)
       if stavkatime > period:
          if balance >= summ:
             if summ > 0:
                if int(rx) in range(0,9):
                   c = Decimal(summ)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x0) {rloser}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()   
                   return                           
                if int(rx) in range(10,29):
                   c = Decimal(summ - summ * 0.25)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x0.25) {rloser}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ * 0.75} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()  
                   return   
                if int(rx) in range(30,44):
                   c = Decimal(summ * 0.5)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x0.5) {rloser}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ * 0.5} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return  
                if int(rx) in range(45,54):
                   c = Decimal(summ - summ * 0.75)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x0.75) {rloser}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {balance - summ * 0.25} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return  
                if int(rx) in range(55,64):
                   c = summ * 1
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å {c2}‚Ç¨ (x1) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()
                   return 
                if int(rx) in range(65,69):
                   c = Decimal(summ * 1.25)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x1.25) {rwin}', parse_mode='html')

                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 1.25)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()           
                   return 
                if int(rx) in range(70,74):
                   c = Decimal(summ * 1.5)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x1.5) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 1.5)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()  
                   return 
                if int(rx) in range(75,84):
                   c = Decimal(summ * 1.75)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x1.75) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 1.75)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit()  
                   return 
                if int(rx) in range(85,95):
                   c = Decimal(summ * 2)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x2) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 2)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return 
                if int(rx) in range(100,108):
                   c = Decimal(summ * 3)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x3) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 3)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return 
                if int(rx) == 109:
                   c = Decimal(summ * 5)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x5) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 5)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                if int(rx) == 108:
                   c = Decimal(summ * 10)
                   c2 = round(c)
                   c2 = '{:,}'.format(c2)
                   await bot.send_message(chat_id, f'{name1}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}‚Ç¨ (x10) {rwin}', parse_mode='html')
                   cursor.execute(f'UPDATE users SET balance = {(balance - summ) + (summ * 10)} WHERE user_id = "{user_id}"')
                   cursor.execute(f'UPDATE bot SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                   connect.commit() 
                   return 
             elif summ <= 1:
                  await bot.send_message(chat_id, f'{name1}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')                                      
          elif int(balance) <= int(summ):
               await bot.send_message(chat_id, f'{name1}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')
       else:
        await bot.send_message(chat_id, f'{name1}, –ò–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5‚É£ —Å–µ–∫—É–Ω–¥ {rloser}', parse_mode='html')
        return

###########################################–†–ï–ô–¢–ò–ù–ì###########################################
    if message.text.lower() == '–∑–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞':
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = str(reply_user_name[0])

       reply_user_id = msg.reply_to_message.from_user.id

       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_status = user_status[0]

       if user_status == 'Owner':
          await message.reply(f"‚õîÔ∏è | –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a> –∑–∞–±—Ä–∞–ª –≤—Å–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É –∏–≥—Ä–æ–∫–∞ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>", parse_mode='html')
          cursor.execute(f'UPDATE users SET user_status = "Player" WHERE user_id = {reply_user_id}')
          connect.commit()

       else:
          await message.reply(f"üÜò | –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —É—Ä–æ–≤–Ω–µ–º \"OWNER\"")
    if message.text.lower() == '–ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞':
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = str(reply_user_name[0])

       reply_user_id = msg.reply_to_message.from_user.id

       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_status = user_status[0]

       if user_status == 'Owner':
          await message.reply(f"‚õîÔ∏è | –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a> –ø–µ—Ä–µ–¥–∞–ª –≤—Å–µ –ø—Ä–∞–≤–∞ –∏–≥—Ä–æ–∫—É <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>", parse_mode='html')
          cursor.execute(f'UPDATE users SET user_status = "Owner" WHERE user_id = {reply_user_id}')
          connect.commit()

       else:
          await message.reply(f"üÜò | –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —É—Ä–æ–≤–Ω–µ–º \"OWNER\"")
    if message.text.lower() == '–≤—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞':
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = str(reply_user_name[0])

       reply_user_id = msg.reply_to_message.from_user.id

       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_status = user_status[0]

       if user_status == 'Owner':
          await message.reply(f"‚õîÔ∏è | –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: <a href='tg://user?id={user_id}'>{user_name}</a> –≤—ã–¥–∞–ª –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Ä–æ–≤–Ω—è \"ADMIN\" –∏–≥—Ä–æ–∫—É <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>", parse_mode='html')
          cursor.execute(f'UPDATE users SET user_status = "Admin" WHERE user_id = {reply_user_id}')
          connect.commit()

       else:
          await message.reply(f"üÜò | –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —É—Ä–æ–≤–Ω–µ–º \"OWNER\"")
          
    if message.text.startswith("—Ä–µ–π—Ç–∏–Ω–≥ –∫—É–ø–∏—Ç—å"):
       msg = message
       user_id = msg.from_user.id
       chat_id = message.chat.id
       user_name = message.from_user.get_mention(as_html=True)
       summ = float(msg.text.split()[2])
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])
       rating = cursor.execute("SELECT rating from users where user_id = ?", (message.from_user.id,)).fetchone()
       rating = int(rating[0])
       rating2 = '{:,}'.format(summ)
       c = summ * 150000000
       c2 = '{:,}'.format(c)
       if summ > 0:
        if int(balance) >= int(summ * 150000000):
          await bot.send_message(message.chat.id, f'{user_name}, –≤—ã –ø–æ–≤—ã—Å–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ {rating2}üëë –∑–∞ {c2}‚Ç¨! {rwin}', parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance - c} WHERE user_id = "{user_id}"')
          cursor.execute(f'UPDATE users SET rating = {rating + summ} WHERE user_id = "{user_id}"')
          connect.commit()

 
        if int(balance) < int(summ * 150000000):
          await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')

       if summ <= 0:
         await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')
    
    if message.text.startswith("—Ä–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ–¥–∞—Ç—å"):
       msg = message
       user_id = msg.from_user.id
       chat_id = message.chat.id
       user_name = message.from_user.get_mention(as_html=True)
       summ = float(msg.text.split()[2])
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])
       rating = cursor.execute("SELECT rating from users where user_id = ?", (message.from_user.id,)).fetchone()
       rating = int(rating[0])
       c = summ * 100000000
       c2 = '{:,}'.format(c)
       rating2 = '{:,}'.format(summ)
       if summ > 0:
        if int(rating) >= int(summ):
          await bot.send_message(message.chat.id, f'{user_name}, –≤—ã –ø–æ–Ω–∏–∑–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ {rating2}üëë –∑–∞ {c2}‚Ç¨! {rwin}', parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance + c} WHERE user_id = "{user_id}"')
          cursor.execute(f'UPDATE users SET rating = {rating - summ} WHERE user_id = "{user_id}"')
          connect.commit()

        if int(rating) < int(summ):
          await bot.send_message(message.chat.id, f'{user_name}, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–ª—è –µ–≥–æ –ø—Ä–æ–¥–∞–∂–∏! {rloser}', parse_mode='html')

       if summ <= 0:
          await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')

    if message.text.startswith("+—Ä–µ–π—Ç–∏–Ω–≥"):
       msg = message
       user_id = msg.from_user.id
       user_name = message.from_user.get_mention(as_html=True)
       summ = float(msg.text.split()[1])
       chat_id = message.chat.id
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])
       rating = cursor.execute("SELECT rating from users where user_id = ?", (message.from_user.id,)).fetchone()
       rating = int(rating[0])
       rating2 = '{:,}'.format(summ)
       c = summ * 150000000
       c2 = '{:,}'.format(c)
       if summ > 0:
        if int(balance) >= int(summ * 150000000):
          await bot.send_message(message.chat.id, f'{user_name}, –≤—ã –ø–æ–≤—ã—Å–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ {rating2}üëë –∑–∞ {c2}‚Ç¨! {rwin}', parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance - c} WHERE user_id = "{user_id}"')
          cursor.execute(f'UPDATE users SET rating = {rating + summ} WHERE user_id = "{user_id}"')
          connect.commit()

 
        if int(balance) < int(summ * 150000000):
          await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')

       if summ <= 0:
         await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')
    
    if message.text.startswith("-—Ä–µ–π—Ç–∏–Ω–≥"):
       msg = message
       user_id = msg.from_user.id
       chat_id = message.chat.id
       user_name = message.from_user.get_mention(as_html=True)
       summ = float(msg.text.split()[1])
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = int(balance[0])
       rating = cursor.execute("SELECT rating from users where user_id = ?", (message.from_user.id,)).fetchone()
       rating = int(rating[0])
       c = summ * 100000000
       c2 ='{:,}'.format(c)
       rating2 = '{:,}'.format(summ)
       if summ > 0:
        if int(rating) >= int(summ):
          await bot.send_message(message.chat.id, f'{user_name}, –≤—ã –ø–æ–Ω–∏–∑–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ {rating2}üëë –∑–∞ {c2}‚Ç¨! {rwin}', parse_mode='html')
          cursor.execute(f'UPDATE users SET balance = {balance + c} WHERE user_id = "{user_id}"')
          cursor.execute(f'UPDATE users SET rating = {rating - summ} WHERE user_id = "{user_id}"')
          connect.commit()
 
        if int(rating) < int(summ):
          await bot.send_message(message.chat.id, f'{user_name}, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–ª—è –µ–≥–æ –ø—Ä–æ–¥–∞–∂–∏! {rloser}', parse_mode='html')

       if summ <= 0:
          await bot.send_message(message.chat.id, f'{user_name}, –Ω–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')
#######################################################–§–ê–†–ú###########################################################
    if message.text.lower() in ["—Å—É–±–±–æ—Ç–∞ –Ω–∞—á–∞—Ç—å", "–°—É–±–±–æ—Ç–∞ –Ω–∞—á–∞—Ç—å"]:
        msg = message
        chat_id = message.chat.id
        name1 = message.from_user.get_mention(as_html=True)
        user_name = msg.from_user.full_name
        user_id = msg.from_user.id

        win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
        rwin = random.choice(win)
        loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
        rloser = random.choice(loser)


        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])

        await bot.send_message(message.chat.id, f"‚ÑπÔ∏è <a href='tg://user?id={user_id}'>{user_name}</a> –ò—â–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª–∞ –°—É–±–±–æ—Ç–∞ –∫–∞–∫–æ–π –ó–∞—Ä–∞–±–æ—Ç–æ–∫? –ü–æ–¥–æ–∂–¥–∏—Ç–µ!", parse_mode='html')
        cursor.execute(f'UPDATE users SET balance = {balance + 0} WHERE user_id = "{user_id}"')
        connect.commit() 
#######################################################–ö–õ–ò–ö###########################################################
    if message.text.lower() in ["–∫–ª–∏–∫", "–ö–ª–∏–∫"]:
        msg = message
        chat_id = message.chat.id
        name1 = message.from_user.get_mention(as_html=True)
        user_name = msg.from_user.full_name
        user_id = msg.from_user.id

        win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
        rwin = random.choice(win)
        loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
        rloser = random.choice(loser)


        balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])

        random_money = random.randint(50000000,60000000)
        random_money2 = '{:,}'.format(random_money)


        await bot.send_message(message.chat.id, f'{user_name}, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {random_money2}‚Ç¨ {rwin}')
        cursor.execute(f'UPDATE users SET balance = {balance + random_money} WHERE user_id = "{user_id}"')
        connect.commit()        
###########################################–¢–û–ü###########################################
    if message.text.lower() in ["—Ç–æ–ø", "–¢–æ–ø"]:
       list = cursor.execute(f"SELECT * FROM users ORDER BY rating DESC").fetchmany(10)
       top_list = []
       chat_id = message.chat.id
       name = message.from_user.get_mention(as_html=True)
       num = 0
       for user in list:
           if user[5] >= 999999999999999999999999:
              c6 = 999999999999999999999999
           else:
              c6 = user[5]

           if int(user[1]) < 0:
              balance3 = 0
           if int(user[1]) in range(1000, 999999):
              balance1 = user[1] / 1000
              balance2 = round(balance1)
              balance3 = f'{balance2} —Ç—ã—Å'

           if int(user[1]) in range(1000000, 999999999):
              balance1 = user[1] / 1000000
              balance2 = round(balance1)
              balance3 = f'{balance2} –º–ª–Ω'

           if int(user[1]) in range(1000000000, 999999999999):
              balance1 = user[1] / 1000000000
              balance2 = round(balance1)
              balance3 = f'{balance2} –º–ª—Ä–¥'

           if int(user[1]) in range(1000000000000, 999999999999999):
              balance1 = user[1] / 1000000000000
              balance2 = round(balance1)
              balance3 = f'{balance2} —Ç—Ä–ª–Ω'

           if int(user[1]) in range(1000000000000000, 999999999999999999):
              balance1 = user[1] / 1000000000000000
              balance2 = round(balance1)
              balance3 = f'{balance2} –∫–≤–¥—Ä'

           if int(user[1]) in range(1000000000000000000, 999999999999999999999):
              balance1 = user[1] / 1000000000000000000
              balance2 = round(balance1)
              balance3 = f'{balance2} –∫–≤–Ω—Ç'

           if int(user[1]) in range(1000000000000000000000, 999999999999999999999999):
              balance1 = user[1] / 1000000000000000000000
              balance2 = round(balance1)
              balance3 = f'{balance2} —Å–∫—Å—Ç'
           if int(user[1]) in range(1000000000000000000000000000, 999999999999999999999999999):
              balance1 = user[1] / 10000000000000000000000000
              balance2 = round(balance1)
              balance3 = f'{balance2} —Å–µ–ø—Ç'
           if int(user[1]) in range(1000000000000000000000000000, 999999999999999999999999999):
              balance1 = user[1] / 10000000000000000000000000
              balance2 = round(balance1)
              balance3 = f'{balance2} –æ–∫—Ç'
           num += 1
           c = Decimal(c6)
           c2 = '{:,}'.format(c)
           
           top_list.append(f"{num}. {user[3]}  ‚Äî üíé{c2} | ‚Ç¨{balance3}")
       top = "\n".join(top_list)
       await bot.send_message(message.chat.id, f"{name},–¢–æ–ø 10 –∏–≥—Ä–æ–∫–æ–≤ –±–æ—Ç–∞\n" + top, parse_mode='html')        
###########################################–ü–ï–†–ï–í–û–î–´###########################################
    if message.text.lower() in ["–∞–¥–º–∏–Ω", "–ê–¥–º–∏–Ω"]:
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])
       admin_menu = InlineKeyboardMarkup(row_width=1)
       Admins_menu_up = InlineKeyboardButton(text='–í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ö–æ–¥‚ùÑÔ∏è', callback_data='Admins_menu_up')
       admin_menu.add(Admins_menu_up)
       await bot.send_message(message.chat.id,f"‚ÑπÔ∏è <a href='tg://user?id={user_id}'>{user_name}</a>, –í–æ–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—éÔ∏è", reply_markup=admin_menu, parse_mode='html')
       
    if message.text.startswith("–ø–µ—Ä–µ–¥–∞—Ç—å"):
       msg = message
       user_id = msg.from_user.id
       name = msg.from_user.last_name 
       rname =  msg.reply_to_message.from_user.last_name 
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply_user_id = msg.reply_to_message.from_user.id
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)

       perevod = float(msg.text.split()[1])
       perevod2 = '{:,}'.format(perevod)
       print(f"{name} –ø–µ—Ä–µ–≤–µ–ª: {perevod} –∏–≥—Ä–æ–∫—É {rname}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])

       if not message.reply_to_message:
          await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
          return
       
       if reply_user_id == user_id:
          await message.reply_to_message.reply(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–∏ —Å–µ–±–µ! {rloser}', parse_mode='html')
          return

       if perevod > 0:
          if balance >= perevod:  
             await message.reply_to_message.reply(f'–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ {perevod2}‚Ç¨ –∏–≥—Ä–æ–∫—É {reply_user_name} {rwin}', parse_mode='html')
             cursor.execute(f'UPDATE users SET balance = {balance - perevod} WHERE user_id = "{user_id}"') 
             cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
             connect.commit()    
   
          elif int(balance) <= int(perevod):
             await message.reply( f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')

       if perevod <= 0:
          await message.reply( f'{user_name}, –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')  

    if message.text.startswith("–ü–µ—Ä–µ–¥–∞—Ç—å"):
       msg = message
       user_id = msg.from_user.id
       name = msg.from_user.last_name 
       rname =  msg.reply_to_message.from_user.last_name 
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply_user_id = msg.reply_to_message.from_user.id
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)

       perevod = float(msg.text.split()[1])
       perevod2 = '{:,}'.format(perevod)
       print(f"{name} –ø–µ—Ä–µ–≤–µ–ª: {perevod} –∏–≥—Ä–æ–∫—É {rname}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])

       if not message.reply_to_message:
          await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
          return
       
       if reply_user_id == user_id:
          await message.reply_to_message.reply(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–∏ —Å–µ–±–µ! {rloser}', parse_mode='html')
          return

       if perevod > 0:
          if balance >= perevod:  
             await message.reply_to_message.reply(f'–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ {perevod2}‚Ç¨ –∏–≥—Ä–æ–∫—É {reply_user_name} {rwin}', parse_mode='html')
             cursor.execute(f'UPDATE users SET balance = {balance - perevod} WHERE user_id = "{user_id}"') 
             cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
             connect.commit()    
   
          elif int(balance) <= int(perevod):
             await message.reply( f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')

       if perevod <= 0:
          await message.reply( f'{user_name}, –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')  

    if message.text.startswith("–¥–∞—Ç—å"):
       msg = message
       user_id = msg.from_user.id
       name = msg.from_user.last_name 
       rname =  msg.reply_to_message.from_user.last_name 
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply_user_id = msg.reply_to_message.from_user.id
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)

       perevod = float(msg.text.split()[1])
       perevod2 = '{:,}'.format(perevod)
       print(f"{name} –ø–µ—Ä–µ–≤–µ–ª: {perevod} –∏–≥—Ä–æ–∫—É {rname}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])

       if not message.reply_to_message:
          await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
          return
       
       if reply_user_id == user_id:
          await message.reply_to_message.reply(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–∏ —Å–µ–±–µ! {rloser}', parse_mode='html')
          return

       if perevod > 0:
          if balance >= perevod:  
             await message.reply_to_message.reply(f'–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ {perevod2}‚Ç¨ –∏–≥—Ä–æ–∫—É {reply_user_name} {rwin}', parse_mode='html')
             cursor.execute(f'UPDATE users SET balance = {balance - perevod} WHERE user_id = "{user_id}"') 
             cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
             connect.commit()    
   
          elif int(balance) <= int(perevod):
             await message.reply( f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')

       if perevod <= 0:
          await message.reply( f'{user_name}, –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')  

    if message.text.startswith("–î–∞—Ç—å"):
       msg = message
       user_id = msg.from_user.id
       name = msg.from_user.last_name 
       rname =  msg.reply_to_message.from_user.last_name 
       user_name = message.from_user.get_mention(as_html=True)
       reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
       reply_user_id = msg.reply_to_message.from_user.id
       win = ['üôÇ', 'üòã', 'üòÑ', 'ü§ë', 'üòÉ']
       rwin = random.choice(win)
       loser = ['üòî', 'üòï', 'üò£', 'üòû', 'üò¢']
       rloser = random.choice(loser)

       perevod = float(msg.text.split()[1])
       perevod2 = '{:,}'.format(perevod)
       print(f"{name} –ø–µ—Ä–µ–≤–µ–ª: {perevod} –∏–≥—Ä–æ–∫—É {rname}")

       cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
       balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
       balance = round(int(balance[0]))
       balance2 = cursor.execute("SELECT balance from users where user_id = ?", (message.reply_to_message.from_user.id,)).fetchone()
       balance2 = round(balance2[0])

       if not message.reply_to_message:
          await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
          return
       
       if reply_user_id == user_id:
          await message.reply_to_message.reply(f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–∏ —Å–µ–±–µ! {rloser}', parse_mode='html')
          return

       if perevod > 0:
          if balance >= perevod:  
             await message.reply_to_message.reply(f'–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ {perevod2}‚Ç¨ –∏–≥—Ä–æ–∫—É {reply_user_name} {rwin}', parse_mode='html')
             cursor.execute(f'UPDATE users SET balance = {balance - perevod} WHERE user_id = "{user_id}"') 
             cursor.execute(f'UPDATE users SET balance = {balance2 + perevod} WHERE user_id = "{reply_user_id}"')
             connect.commit()    
   
          elif int(balance) <= int(perevod):
             await message.reply( f'{user_name}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! {rloser}', parse_mode='html')

       if perevod <= 0:
          await message.reply( f'{user_name}, –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ! {rloser}', parse_mode='html')  

@dp.callback_query_handler(text='admins_comands')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_status = str(user_status[0]) 
    if user_status == 'Owner':
       commands = '''
1Ô∏è‚É£ | –í—ã–¥–∞—Ç—å [—Å—É–º–º–∞]
2Ô∏è‚É£ | –ó–∞–±—Ä–∞—Ç—å [—Å—É–º–º–∞]
3Ô∏è‚É£ | –£–º–Ω–æ–∂–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
4Ô∏è‚É£ | –û–±–Ω—É–ª–∏—Ç—å
5Ô∏è‚É£ | /ban
6Ô∏è‚É£ | /unban
7Ô∏è‚É£ |–í—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞
8Ô∏è‚É£ | –í—ã–¥–∞—Ç—å —Ö–µ–ª–ø–µ—Ä–∞
9Ô∏è‚É£ | –ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞
üîü | –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞
1Ô∏è‚É£1Ô∏è‚É£ | –ü–æ–¥–µ–ª–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]

       '''
    if user_status == 'Helper_Admin':
       commands = '''
1Ô∏è‚É£ | –í—ã–¥–∞—Ç—å [—Å—É–º–º–∞]
2Ô∏è‚É£ | –ó–∞–±—Ä–∞—Ç—å [—Å—É–º–º–∞]
3Ô∏è‚É£ | –£–º–Ω–æ–∂–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
4Ô∏è‚É£ | –û–±–Ω—É–ª–∏—Ç—å
5Ô∏è‚É£ | /ban
6Ô∏è‚É£ | /unban
7Ô∏è‚É£ | –ü–æ–¥–µ–ª–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]


       '''
    if user_status == 'Admin':
       commands = '''
1Ô∏è‚É£ | –í—ã–¥–∞—Ç—å [—Å—É–º–º–∞]
2Ô∏è‚É£ | –ó–∞–±—Ä–∞—Ç—å [—Å—É–º–º–∞]
3Ô∏è‚É£ | –£–º–Ω–æ–∂–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
4Ô∏è‚É£ | –û–±–Ω—É–ª–∏—Ç—å
       '''
    if user_status == 'Admin':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ üìù\n{commands}", parse_mode='html')
       return
    if user_status == 'Helper_Admin':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ üìù\n{commands}", parse_mode='html')
       return
    if user_status == 'Owner':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ üìù\n{commands}", parse_mode='html')
       return
    else:
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>,–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞ üëÆ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É <a href='t.me/XennuKinDer/'>Xennu</a>  ‚ö†Ô∏è", parse_mode='html')

@dp.callback_query_handler(text='stats222')
async def ob_Statisyik(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_status = user_status[0]
    
    sqlite_select_query2 = """SELECT * from users where user_status = \"Player\""""
    cursor.execute(sqlite_select_query2)
    records2 = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Admin\""""
    cursor.execute(sqlite_select_query2)
    records2 = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Helper_Admin\""""
    cursor.execute(sqlite_select_query2)
    records3 = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Owner\""""
    cursor.execute(sqlite_select_query2)
    records4 = cursor.fetchall()

    if user_status == 'Owner':
       await callback.message.answer(f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ üîé

üîì | –û—Å–Ω–æ–≤–Ω–∞—è
         üë§ | –ò–≥—Ä–æ–∫–æ–≤: {len(records)}

üõë | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è
         ‚õîÔ∏è | ADMIN: {len(records2)}
         ‚ö†Ô∏è | HELPER-ADMIN: {len(records3)}
         ‚úÖ | OWNER: {len(records4)}        
       """, parse_mode='html')
    else:
       await callback.message.answer(f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER-ADMINS\" ", parse_mode='html')


@dp.callback_query_handler(text='statistic')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    
    sqlite_select_query = """SELECT * from users"""
    cursor.execute(sqlite_select_query)
    records = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Admin\""""
    cursor.execute(sqlite_select_query2)
    records2 = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Helper_Admin\""""
    cursor.execute(sqlite_select_query2)
    records3 = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Owner\""""
    cursor.execute(sqlite_select_query2)
    records4 = cursor.fetchall()

    stats222 = InlineKeyboardMarkup(row_width=1)
    ob_statistik2 = InlineKeyboardButton(text='–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üîé', callback_data='ob_statistik2')
    
    stats222.add(ob_statistik2)

    if user_status == "Admin":
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞  üìä\nü§µ | –ò–≥—Ä–æ–∫–æ–≤: {len(records)}\nüë®‚Äç‚öñÔ∏è | OWNER: {len(records4)}\nüëÆ‚Äç‚ôÄÔ∏è | HELPER-ADMINS: {len(records3)}\nü§† | ADMIN: {len(records2)}",reply_markup=stats222, parse_mode='html')
       return
    if user_status == "Helper_Admin":
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞  üìä\nü§µ | –ò–≥—Ä–æ–∫–æ–≤: {len(records)}\nüë®‚Äç‚öñÔ∏è | OWNER: {len(records4)}\nüëÆ‚Äç‚ôÄÔ∏è | HELPER-ADMINS: {len(records3)}\nü§† | ADMIN: {len(records2)}",reply_markup=stats222 , parse_mode='html')
       return

    if user_status == "Owner":
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞  üìä\nü§µ | –ò–≥—Ä–æ–∫–æ–≤: {len(records)}\nüë®‚Äç‚öñÔ∏è | OWNER: {len(records4)}\nüëÆ‚Äç‚ôÄÔ∏è | HELPER-ADMINS: {len(records3)}\nü§† | ADMIN: {len(records2)}",reply_markup=stats222 , parse_mode='html')
       return
    else:
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>,–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞ üëÆ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É <a href='t.me/XennuKinDer/'>–†–∞–∑—Ä–∞–±</a>  ‚ö†Ô∏è ", parse_mode='html')
@dp.callback_query_handler(text='Admins_menu_up')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_status = str(user_status[0])

    admins_menu = InlineKeyboardMarkup(row_width=2)
    statistic = InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üë•', callback_data='statistic')
    admins_comands = InlineKeyboardButton(text='–ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã üìù', callback_data='admins_comands')
    admins_menu.add(statistic, admins_comands)
    if user_status == 'Owner':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é ‚úÖ\n\n‚õîÔ∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: OWNER\n\nüîê | –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:\n     üë• | –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n     üìù | –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã\n\n‚ÜòÔ∏è –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π", reply_markup=admins_menu , parse_mode='html')
       return

    if user_status == 'Helper_Admin':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é ‚úÖ\n\n‚õîÔ∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: HELPER ADMINS\n\nüîê | –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:\n     üë• | –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n     üìù | –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã\n\n‚ÜòÔ∏è –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π", reply_markup=admins_menu , parse_mode='html')
       return
    if user_status == 'Admin':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é ‚úÖ\n\n‚õîÔ∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ADMINS\n\nüîê | –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:\n     üë• | –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n     üìù | –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã\n\n‚ÜòÔ∏è –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π", reply_markup=admins_menu , parse_mode='html')
       return
    else:
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>,–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞ üëÆ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É <a href='t.me/XennuKinDer/'>Xennu</a>  ‚ö†Ô∏è ", parse_mode='html')

@dp.callback_query_handler(text='channel_poverk')
async def craft_resurs3(callback: types.CallbackQuery):
   user_id = callback.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   balance = cursor.execute("SELECT balance from users where user_id = ?",(callback.from_user.id,)).fetchone()
   balance = int(balance[0])
   user_channel_status = await bot.get_chat_member(chat_id="@LayGame", user_id=callback.from_user.id)

   channel_pov = cursor.execute("SELECT members from channel_pov where user_id = ?", (callback.from_user.id,)).fetchone()
   channel_pov = int(channel_pov[0])

   if channel_pov > 0:
      await callback.message.answer( f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –¥–µ–Ω—å–≥–∏ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É", parse_mode='html')
      return

   if user_channel_status['status'] != 'left':
      await callback.message.answer( f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª ‚úÖ", parse_mode='html')
      await callback.message.answer( f"üí∏ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑ –≤ —Ä–∞–∑–º–µ—Ä–µ  500.000.000.000.000.000‚Ç¨", parse_mode='html')
      cursor.execute(f'UPDATE channel_pov SET members = {1} WHERE user_id = {user_id}')
      cursor.execute(f'UPDATE users SET balance = {balance + 500000000000000000} WHERE user_id = {user_id}')
      connect.commit()
   else:
      await callback.message.answer( f"‚ùå | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞", parse_mode='html')
 
@dp.callback_query_handler(text='Priv2')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    await callback.message.answer(f'''
<a href='tg://user?id={user_id}'>{user_name}</a> , –≤–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏üìù

<b>üéÄ | –ò–≥—Ä–æ–∫
üëë | VIP+
üéÅ | –ú–µ–≥–∞–ê–ø–ø–µ—Ä 
üíµ | –î–æ–Ω–∞—Ç–µ—Ä
üíé | –ú–µ–≥–∞–î–æ–Ω–∞—Ç–µ—Ä</b>

‚ÑπÔ∏è –ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É , –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    ''', parse_mode='html')

@dp.callback_query_handler(text='Im2')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    await callback.message.answer(f'''
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –∏–º—É—â–µ—Å—Ç–≤–æüìù

<code>üè† | –î–æ–º–∞
         üè° –ú–æ–π –¥–æ–º 
         üè° –ö—É–ø–∏—Ç—å –ø–æ–¥–≤–∞–ª [–Ω–æ–º–µ—Ä]
         üè° –ü—Ä–æ–¥–∞—Ç—å –ø–æ–¥–≤–∞–ª 
         üè° –ö—Ä–∞—Ñ—Ç–∏—Ç—å 
         üè° –°–∏—Å—Ç–µ–º–∞ –∫—Ä–∞—Ñ—Ç–∞ 

üöò | –ú–∞—à–∏–Ω—ã
        üöó –ú–æ—è –º–∞—à–∏–Ω–∞
        üöó –ó–∞–ø—Ä–∞–≤–∏—Ç—å 
        üöó –ü–æ—á–µ–Ω–∏—Ç—å</code>

‚ÑπÔ∏è –ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É , –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    ''', parse_mode='html')

@dp.callback_query_handler(text='rabot2')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    await callback.message.answer(f'''
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç–Ω–∏—Ö –∫–æ–º–∞–Ω–¥üìù

<i>‚õè | –®–∞—Ö—Ç–∞
      –ö—É–ø–∏—Ç—å –∫–∏—Ä–∫—É ‚õè
      –ö–æ–ø–∞—Ç—å —Ä—É–¥—É ‚õè
      –ü—Ä–æ–¥–∞—Ç—å [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ä—É–¥—ã] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] ‚õè

üåæ | –§–µ—Ä–º–∞ 
      –ö—É–ø–∏—Ç—å –≥—Ä–∞–±–ª–∏ üåæ
      –°–æ–±—Ä–∞—Ç—å [–Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∂–∞—è] üåæ
      –ü—Ä–æ–¥–∞—Ç—å [–Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∂–∞—è] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] üåæ</i>

‚ÑπÔ∏è –ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É , –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    ''', parse_mode='html')

@dp.callback_query_handler(text='game2')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    await callback.message.answer(f'''
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ üìù

<b>üßä | /gamevb - –í–ë
‚öΩÔ∏è | –§—É—Ç–±–æ–ª\–§–± [—Å—Ç–∞–≤–∫–∞]
üé± | Dice [—á\–∫] [—Å—Ç–∞–≤–∫–∞] - Wheel
ü§µ‚Äç‚ôÄÔ∏è | –ö–∞–∑–∏–Ω–æ [—Å—É–º–º–∞]
‚óæÔ∏è | –ü–ª–∏–Ω–∫–æ [—Å—É–º–º–∞]
üé∞ | –°–ø–∏–Ω [—Å—É–º–º–∞]
üé≤ | –ö—É–±–∏–∫ [—á–∏—Å–ª–æ] [—Å—É–º–º–∞]
üé≤ | –ß—ë—Ç–Ω–æ–µ\–Ω–µ—á—ë—Ç–Ω–æ–µ [—Å—É–º–º–∞]
üèé | –ì–æ–Ω–∫–∞ [—Å—É–º–º–∞]</b>

‚ÑπÔ∏è –ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É , –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    ''', parse_mode='html')

@dp.callback_query_handler(text='admins_comands')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_status = str(user_status[0]) 
    if user_status == 'Owner':
       commands = '''
<b>1Ô∏è‚É£ | –í—ã–¥–∞—Ç—å [—Å—É–º–º–∞]
2Ô∏è‚É£ | –ó–∞–±—Ä–∞—Ç—å [—Å—É–º–º–∞]
3Ô∏è‚É£ | –£–º–Ω–æ–∂–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
4Ô∏è‚É£ | –û–±–Ω—É–ª–∏—Ç—å
5Ô∏è‚É£ | /ban
6Ô∏è‚É£ | /unban
7Ô∏è‚É£ |–í—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞
8Ô∏è‚É£ | –í—ã–¥–∞—Ç—å —Ö–µ–ª–ø–µ—Ä–∞
9Ô∏è‚É£ | –ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞
üîü | –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞
1Ô∏è‚É£1Ô∏è‚É£ | /reset
1Ô∏è‚É£2Ô∏è‚É£ | /warn
1Ô∏è‚É£3Ô∏è‚É£ | reset_id [ID]
1Ô∏è‚É£4Ô∏è‚É£ | /info
1Ô∏è‚É£5Ô∏è‚É£ | /info_id [ID]
1Ô∏è‚É£6Ô∏è‚É£ | –ü–æ–¥–µ–ª–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
1Ô∏è‚É£7Ô∏è‚É£ | /ban_id [ID]
1Ô∏è‚É£8Ô∏è‚É£ | /unban_id [ID]
1Ô∏è‚É£9Ô∏è‚É£ | /warn_id [ID]
2Ô∏è‚É£0Ô∏è‚É£ | /unwarn_id [ID]</b>

       '''
    if user_status == 'Helper_Admin':
       commands = '''
<i>1Ô∏è‚É£ | –í—ã–¥–∞—Ç—å [—Å—É–º–º–∞]
2Ô∏è‚É£ | –ó–∞–±—Ä–∞—Ç—å [—Å—É–º–º–∞]
3Ô∏è‚É£ | –£–º–Ω–æ–∂–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
4Ô∏è‚É£ | –û–±–Ω—É–ª–∏—Ç—å
5Ô∏è‚É£ | /ban
6Ô∏è‚É£ | /unban
7Ô∏è‚É£ | /warn
8Ô∏è‚É£ | reset_id [ID]
9Ô∏è‚É£ | /info
üîü | /info_id [ID]
1Ô∏è‚É£1Ô∏è‚É£ | –ü–æ–¥–µ–ª–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
1Ô∏è‚É£2Ô∏è‚É£ | /ban_id [ID]
1Ô∏è‚É£3Ô∏è‚É£ | /unban_id [ID]
1Ô∏è‚É£4Ô∏è‚É£ | /warn_id [ID]
1Ô∏è‚É£5Ô∏è‚É£ | /unwarn_id [ID]</i>


       '''
    if user_status == 'Admin':
       commands = '''
<i>1Ô∏è‚É£ | –í—ã–¥–∞—Ç—å [—Å—É–º–º–∞]
2Ô∏è‚É£ | –ó–∞–±—Ä–∞—Ç—å [—Å—É–º–º–∞]
3Ô∏è‚É£ | –£–º–Ω–æ–∂–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
4Ô∏è‚É£ | –û–±–Ω—É–ª–∏—Ç—å
5Ô∏è‚É£ | /info
6Ô∏è‚É£ | –ü–æ–¥–µ–ª–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]</i>
       '''
    if user_status == 'Admin':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ üìù\n{commands}", parse_mode='html')
       return
    if user_status == 'Helper_Admin':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ üìù\n{commands}", parse_mode='html')
       return
    if user_status == 'Owner':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ üìù\n{commands}", parse_mode='html')
       return
    else:
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>,–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞ üëÆ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚ö†Ô∏è", parse_mode='html')

@dp.callback_query_handler(text='stats222')
async def ob_Statisyik(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_status = user_status[0]

    sqlite_select_query21 = """SELECT * from users where user_status = \"Player\""""
    cursor.execute(sqlite_select_query21)
    Player = cursor.fetchall()

    sqlite_select_query22 = """SELECT * from users where user_status = \"vip\""""
    cursor.execute(sqlite_select_query22)
    vip = cursor.fetchall()

    sqlite_select_query23 = """SELECT * from users where user_status = \"apper\""""
    cursor.execute(sqlite_select_query23)
    apper = cursor.fetchall()

    sqlite_select_query24 = """SELECT * from users where user_status = \"donater\""""
    cursor.execute(sqlite_select_query24)
    donater = cursor.fetchall()

    sqlite_select_query25 = """SELECT * from users where user_status = \"donater2\""""
    cursor.execute(sqlite_select_query25)
    donater2 = cursor.fetchall()

    sqlite_select_query = """SELECT * from users"""
    cursor.execute(sqlite_select_query)
    records = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Admin\""""
    cursor.execute(sqlite_select_query2)
    records2 = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Helper_Admin\""""
    cursor.execute(sqlite_select_query2)
    records3 = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Owner\""""
    cursor.execute(sqlite_select_query2)
    records4 = cursor.fetchall()

    if user_status == 'Owner':
       await callback.message.answer(f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ üîé

<b>üîì | –û—Å–Ω–æ–≤–Ω–∞—è
         üë§ | –ò–≥—Ä–æ–∫–æ–≤: {len(records)}

üî∞ | –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏
         üëë | VIP+ {len(vip)}
         üéÅ | –ú–µ–≥–∞ –ê–ø–ø–µ—Ä {len(apper)}
         üíµ | –î–æ–Ω–∞—Ç–µ—Ä {len(donater)}
         üíé | –ú–µ–≥–∞–î–æ–Ω–∞—Ç–µ—Ä  {len(donater2)}</b>

<b>üõë | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è
         ‚õîÔ∏è | ADMIN: {len(records2)}
         ‚ö†Ô∏è | HELPER-ADMIN: {len(records3)}
         ‚úÖ | OWNER: {len(records4)}</b>
       """, parse_mode='html')
    else:
       await callback.message.answer(f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER-ADMINS\" ", parse_mode='html')


@dp.callback_query_handler(text='statistic')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    
    sqlite_select_query = """SELECT * from users"""
    cursor.execute(sqlite_select_query)
    records = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Admin\""""
    cursor.execute(sqlite_select_query2)
    records2 = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Helper_Admin\""""
    cursor.execute(sqlite_select_query2)
    records3 = cursor.fetchall()

    sqlite_select_query2 = """SELECT * from users where user_status = \"Owner\""""
    cursor.execute(sqlite_select_query2)
    records4 = cursor.fetchall()

    stats222 = InlineKeyboardMarkup(row_width=1)
    ob_statistik2 = InlineKeyboardButton(text='–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üîé', callback_data='ob_statistik2')
    
    stats222.add(ob_statistik2)

    if user_status == "Admin":
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞  üìä\nü§µ | –ò–≥—Ä–æ–∫–æ–≤: {len(records)}\nüë®‚Äç‚öñÔ∏è | OWNER: {len(records4)}\nüëÆ‚Äç‚ôÄÔ∏è | HELPER-ADMINS: {len(records3)}\nü§† | ADMIN: {len(records2)}",reply_markup=stats222, parse_mode='html')
       return
    if user_status == "Helper_Admin":
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞  üìä\nü§µ | –ò–≥—Ä–æ–∫–æ–≤: {len(records)}\nüë®‚Äç‚öñÔ∏è | OWNER: {len(records4)}\nüëÆ‚Äç‚ôÄÔ∏è | HELPER-ADMINS: {len(records3)}\nü§† | ADMIN: {len(records2)}",reply_markup=stats222 , parse_mode='html')
       return

    if user_status == "Owner":
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞  üìä\nü§µ | –ò–≥—Ä–æ–∫–æ–≤: {len(records)}\nüë®‚Äç‚öñÔ∏è | OWNER: {len(records4)}\nüëÆ‚Äç‚ôÄÔ∏è | HELPER-ADMINS: {len(records3)}\nü§† | ADMIN: {len(records2)}",reply_markup=stats222 , parse_mode='html')
       return
    else:
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>,–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞ üëÆ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É‚ö†Ô∏è ", parse_mode='html')
@dp.callback_query_handler(text='Admins_menu_up')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_status = str(user_status[0])

    admins_menu = InlineKeyboardMarkup(row_width=2)
    statistic = InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üë•', callback_data='statistic')
    admins_comands = InlineKeyboardButton(text='–ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã üìù', callback_data='admins_comands')
    admins_menu.add(statistic, admins_comands)
    if user_status == 'Owner':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é ‚úÖ\n\n‚õîÔ∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: OWNER\n\nüîê | –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:\n     üë• | –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n     üìù | –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã\n\n‚ÜòÔ∏è –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π", reply_markup=admins_menu , parse_mode='html')
       return

    if user_status == 'Helper_Admin':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é ‚úÖ\n\n‚õîÔ∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: HELPER ADMINS\n\nüîê | –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:\n     üë• | –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n     üìù | –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã\n\n‚ÜòÔ∏è –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π", reply_markup=admins_menu , parse_mode='html')
       return
    if user_status == 'Admin':
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é ‚úÖ\n\n‚õîÔ∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ADMINS\n\nüîê | –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:\n     üë• | –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n     üìù | –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã\n\n‚ÜòÔ∏è –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π", reply_markup=admins_menu , parse_mode='html')
       return
    else:
       await callback.message.answer(f"<a href='tg://user?id={user_id}'>{user_name}</a>,–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞ üëÆ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É‚ö†Ô∏è ", parse_mode='html')
@dp.callback_query_handler(text='Osn2')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    await callback.message.answer(f'''
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥üìù

<b>üñº | –ê–≤–∞—Ç–∞—Ä–∫–∞ | –†–∞–±–æ—Ç–∞–µ—Ç
      –£–¥–∞–ª–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É üîí
üï¥ | –ü—Ä–æ—Ñ–∏–ª—å
üîé | –ù–∏–∫ 
      –°–º–µ–Ω–∏—Ç—å –Ω–∏–∫ [—Å–æ–æ–±—â–µ–Ω–∏—è] ‚öôÔ∏è
      –°–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å [—Å–æ–æ–±—â–µ–Ω–∏—è] ‚öôÔ∏è
      –°–º–µ–Ω–∏—Ç—å –∏–≥—Ä–æ–∫—É –ø—Ä–µ—Ñ–∏–∫—Å [—Å–æ–æ–±—â–µ–Ω–∏—è] ‚öôÔ∏è
üëù | –ë\–ë–∞–ª–∞–Ω—Å
üè¶ | –ë–∞–Ω–∫
      –ë–∞–Ω–∫ —Å–Ω—è—Ç—å [—Å—É–º–º–∞] üèõ
      –ë–∞–Ω–∫ –ø–æ–ª–æ–∂–∏—Ç—å [—Å—É–º–º–∞] üèõ
      –î–µ–ø–æ–∑–∏—Ç –ø–æ–ª–æ–∂–∏—Ç—å [—Å—É–º–º–∞] üèõ
      –î–µ–ø–æ–∑–∏—Ç —Å–Ω—è—Ç—å [—Å—É–º–º–∞] üèõ
      –ü—Ä–æ—Ü–µ–Ω—Ç —Å–Ω—è—Ç—å [—Å—É–º–º–∞] üèõ
üíπ | –ò–µ–Ω—ã
       –ò–µ–Ω—ã –∫—É–ø–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
        –ò–µ–Ω—ã –ø—Ä–æ–¥–∞—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
         –ò–µ–Ω—ã –∫—É—Ä—Å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
üíé | –†–µ–π—Ç–∏–Ω–≥
      –†–µ–π—Ç–∏–Ω–≥ –∫—É–ø–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] üíé
       –†–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ–¥–∞—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] üíé
ü§ù | –î–∞—Ç—å [—Å—É–º–º–∞]
üí∞ | –û–≥—Ä–∞–±–∏—Ç—å –±–∞–Ω–∫ 
üéÅ | –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
üëë | –¢–æ–ø
üèõ | –¢–æ–ø –±–æ–≥–∞—á–µ–π\ –¢–æ–ø –ë
      –ü–æ–ª—É—á–∏—Ç—å –∫–∏—Ç-–±–æ–Ω—É—Å üéÅ
üëÆ‚Äç‚ôÇÔ∏è | –†–µ–ø–æ—Ä—Ç
üí≠ | –†–ø-–∫–æ–º–∞–Ω–¥—ã</b>

‚ÑπÔ∏è –ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É , –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    ''', parse_mode='html')

@dp.callback_query_handler(text='register_help')
async def help(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
    user_name = str(user_name[0])


    help2 = InlineKeyboardMarkup(row_width=2)
    Osn2 = InlineKeyboardButton(text='–û—Å–Ω–æ–≤–Ω—ã–µ üìù', callback_data='Osn2')
    game2 = InlineKeyboardButton(text='–ò–≥—Ä—ã üéÆ', callback_data='game2')
    rabot2 = InlineKeyboardButton(text='–†–∞–±–æ—Ç—ã üî®', callback_data='rabot2')
    Im2 = InlineKeyboardButton(text='–ò–º—É—â–µ—Å—Ç–≤–æ üèò ', callback_data='Im2')
    Priv2 = InlineKeyboardButton(text='–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ üìñ', callback_data='Priv2')
    Adm2 = InlineKeyboardButton(text='Admins menu ‚õîÔ∏è', callback_data='Admins_menu_up')
    help2.add(Osn2, game2, rabot2, Im2, Priv2, Adm2)
    await callback.message.answer(f'''
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–∏–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üîç

<code>üìù | –û—Å–Ω–æ–≤–Ω—ã–µ
üéÆ | –ò–≥—Ä—ã 
üî® | –†–∞–±–æ—Ç—ã
üèò | –ò–º—É—â–µ—Å—Ç–≤–æ
üìñ | –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏
‚õîÔ∏è | Admins menu</code>

–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @GoormHikka üíª
–ù–∞—à–∞ –±–µ—Å–µ–¥–∞: @userbotikchat  üí¨
    ''', reply_markup=help2, parse_mode='html')     
    
    
    
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
